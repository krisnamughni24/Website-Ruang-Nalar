"use strict";
(self.webpackJsonp__wix_thunderbolt_app =
  self.webpackJsonp__wix_thunderbolt_app || []).push([
  [6692],
  {
    64487: function (e, t, n) {
      n.r(t),
        n.d(t, {
          Animations: function () {
            return o.FK;
          },
          EditorAnimationsSym: function () {
            return o.lc;
          },
          name: function () {
            return o.u2;
          },
          page: function () {
            return g;
          },
        });
      var o = n(11717),
        i = n(59032),
        a = n(5096),
        r = n(61049),
        s = n(43757),
        l = n(44263),
        p = n(81660);
      const c = (0, s.ff)([(0, s.t6)(r.Wf, o.u2), a.Y2], (e, t) => {
        var o;
        const i = null === (o = e.get()) || void 0 === o ? void 0 : o.managers,
          { promise: a, resolver: r } = (0, l.w)();
        return (
          i || e.update(() => ({ managers: a })),
          {
            name: "animationsInit",
            pageWillMount() {
              if (!i) {
                const e = n
                  .e(1808)
                  .then(n.bind(n, 90466))
                  .then(({ createAnimatorManager: e }) =>
                    (0, p.K)(() => ({
                      animatorManager: e(t),
                      effectManager: e("motion"),
                    }))
                  );
                r(e);
              }
            },
            getInstance() {
              return e.get().managers.then(({ animatorManager: e }) => e);
            },
            getEffectsInstance() {
              return e.get().managers.then(({ effectManager: e }) => e);
            },
          }
        );
      });
      var d = n(27227);
      const u = (0, s.ff)([o.FK, d.l, a.ZQ, a.ul], (e, t, n, i) => ({
          getSdkHandlers: () => ({
            [o.u2]: {
              runAnimation: async (o, a) => {
                const r = Array.isArray(o.targetId) ? o.targetId : [o.targetId];
                let s;
                const l = new Promise((e) => {
                    s = e;
                  }),
                  p = await e.getInstance(),
                  c = {
                    name: "BaseClear",
                    targetId: o.targetId,
                    duration: 0,
                    delay: 0,
                    params: {
                      props:
                        "clip,clipPath,webkitClipPath,opacity,transform,visibility",
                      immediateRender: !1,
                    },
                  };
                return (
                  ((e, t) => {
                    t.forEach((t) => {
                      const n = e.document.getElementById(t);
                      n && n.classList.add("is-animating");
                    });
                  })(n, r),
                  (o.params = Object.assign(Object.assign({}, o.params), {
                    callbacks: {
                      onStart() {
                        "in" === a &&
                          t.update(
                            r.reduce(
                              (e, t) =>
                                Object.assign(Object.assign({}, e), {
                                  [t]: { visibility: null },
                                }),
                              {}
                            )
                          );
                      },
                      onComplete() {
                        "out" === a &&
                          t.update(
                            r.reduce(
                              (e, t) =>
                                Object.assign(Object.assign({}, e), {
                                  [t]: { visibility: "hidden !important" },
                                }),
                              {}
                            )
                          ),
                          ((e, t) => {
                            e.requestAnimationFrame(() => {
                              t.forEach((t) => {
                                const n = e.document.getElementById(t);
                                n && n.classList.remove("is-animating");
                              });
                            });
                          })(n, r);
                      },
                    },
                  })),
                  await i,
                  (o = Object.assign(Object.assign({}, o), {
                    duration: o.duration || 1e-5,
                  })),
                  p.runSequence(
                    [
                      { type: "Animation", data: o },
                      { type: "Animation", data: c },
                    ],
                    {
                      callbacks: {
                        onComplete: () => s(),
                        onInterrupt: () => s(),
                      },
                    }
                  ),
                  l
                );
              },
            },
          }),
        })),
        g = (e) => {
          e(o.FK, i.j.PageWillMountHandler).to(c), e(a.CT).to(u);
        };
    },
    12884: function (e, t, n) {
      n.r(t),
        n.d(t, {
          NavigationSymbol: function () {
            return d.q;
          },
          editor: function () {
            return h;
          },
          page: function () {
            return m;
          },
        });
      var o = n(43757),
        i = n(5096),
        a = n(55048),
        r = n(61049),
        s = n(21691),
        l = n(19238),
        p = n(86305),
        c = n(47399),
        d = n(60091);
      const u = (0, o.ff)(
        [
          i.ZQ,
          l.F0,
          l.Iz,
          c.Od,
          a.QZ,
          l.BC,
          (0, o.t6)(r.z8, d.u),
          (0, o.jt)(p.cC),
        ],
        (e, t, n, o, i, { shouldNavigate: a }, r, l) => {
          const p = async (i, r) => {
            if (!a(i)) return !1;
            const {
              href: p,
              target: c,
              linkPopupId: d,
              anchorDataId: u,
              anchorCompId: g,
              type: f,
            } = i;
            if (d) return l.open(d), !0;
            if (
              "DocumentLink" === f ||
              "PhoneLink" === f ||
              "EmailLink" === f ||
              "ExternalLink" === f
            )
              return e.open(p, c), !0;
            if (!t.isInternalValidRoute(p)) return !1;
            if (
              n.getFullUrlWithoutQueryParams() !== p &&
              (await t.navigate(p, Object.assign({ anchorDataId: u }, r)))
            )
              return !0;
            if (g || u)
              return (
                (g && !e.document.getElementById(g)) ||
                  o.scrollToAnchor({ anchorCompId: g, anchorDataId: u }),
                !1
              );
            if (p) {
              const e = n.getParsedUrl();
              e.search = (0, s.h)(e.searchParams);
              const { searchParams: t } = new URL(p, e.origin);
              return (
                t.forEach((t, n) =>
                  null == e ? void 0 : e.searchParams.set(n, t)
                ),
                n.pushUrlState(e),
                (null == l ? void 0 : l.getCurrentLightboxId())
                  ? (null == l || l.close(), !1)
                  : ((null == r ? void 0 : r.disableScrollToTop) ||
                      o.scrollToAnchor({ anchorDataId: "SCROLL_TO_TOP" }),
                    !1)
              );
            }
            return !1;
          };
          return r.export({ navigateTo: p }), { navigateTo: p };
        }
      );
      var g = n(8562);
      const f = (0, o.ff)([i.ZQ], (e) => ({
          shouldNavigate: () => !(0, g.yF)(e),
        })),
        m = (e) => {
          e(d.q).to(u), e(l.BC).to(f);
        },
        h = (e) => {
          e(d.q).to(u);
        };
    },
    36878: function (e, t, n) {
      n.r(t),
        n.d(t, {
          OoiTpaSharedConfigSymbol: function () {
            return a.i;
          },
          editorPage: function () {
            return l;
          },
          page: function () {
            return s;
          },
        });
      var o = n(43757),
        i = n(61049),
        a = n(24548);
      const r = (0, o.ff)(
          [(0, o.t6)(i.R9, a.u), (0, o.t6)(i.jC, a.u)],
          (
            { wixStaticFontsLinks: e, imageSpriteUrl: t },
            { fontsMeta: n }
          ) => ({
            getFontsConfig() {
              return { cssUrls: e, fontsMeta: n, imageSpriteUrl: t };
            },
          })
        ),
        s = (e) => {
          e(a.i).to(r);
        },
        l = s;
    },
    24773: function (e, t, n) {
      n.d(t, {
        Z: function () {
          return d;
        },
      });
      var o = n(19095),
        i = n(43757),
        a = n(61049),
        r = n(5096),
        s = n(82627),
        l = n(70926),
        p = n(34754);
      async function c() {
        return await window.externalsRegistry.react.loaded, n(21346);
      }
      var d = (0, i.ff)(
        [(0, i.t6)(a.R9, p.u2), r.Zr, r.EE, l.h, r.ZQ, s.O, p.zY],
        (
          { ooiComponentsData: e },
          { siteAssets: t, mode: { debug: n } },
          i,
          a,
          r,
          s,
          l
        ) => {
          let p = null;
          const d = async () => {
            await (0, o.mB)(r, t.clientTopology.moduleRepoUrl),
              r.require.config({ waitSeconds: 30 }),
              (r.requirejs.onError = (e) => {
                const { requireModules: t, requireType: n } = e;
                i.captureError(e, {
                  tags: { feature: "commons", methodName: "requirejs.onError" },
                  extra: { requireModules: t, requireType: n },
                });
              });
          };
          async function u(e) {
            (p = p || d()), await p;
            const t = (function (e) {
                return e.split("/").slice(-1)[0].split(".")[0];
              })(e),
              n = e.replace(/\/[^/]+\.js$/, `/clientContainer${t}.min.js`);
            return await (async function (e, t, n) {
              const i = await (0, o.xA)(e),
                a = await (async function (e, t, n) {
                  await e.init(n);
                  return (await e.get(t))();
                })(i, t, n);
              return a;
            })(n, t, l);
          }
          async function g() {
            const { ooiReactComponentClientWrapper: e } = await c();
            return { component: e(null, a) };
          }
          return {
            async getComponent(t) {
              if (!e[t])
                return (
                  i.captureError(
                    new Error(
                      "widgetId could not be found in ooiComponentsData"
                    ),
                    {
                      tags: { feature: "ooi", methodName: "getComponent" },
                      extra: { widgetId: t },
                    }
                  ),
                  g()
                );
              const { componentUrl: o, isModuleFederated: r } = e[t],
                l = await (r && s["specs.thunderbolt.module_federation"]
                  ? u(o)
                  : ((f = o),
                    new Promise(async (e, t) => {
                      (p = p || d()), await p, require([f], (t) => e(t), t);
                    }))
                ).catch((e) => {
                  n && console.error(`widget failed to load [${t}]:`, e);
                });
              var f;
              if (!l || !l.default)
                return (
                  i.captureError(
                    new Error(
                      "widget did not return a module of React component"
                    ),
                    {
                      tags: { feature: "ooi", methodName: "getComponent" },
                      extra: {
                        widgetId: t,
                        componentUrl: o,
                        isModuleFederated: r,
                        module_federation:
                          s["specs.thunderbolt.module_federation"],
                      },
                    }
                  ),
                  g()
                );
              const { ooiReactComponentClientWrapper: m } = await c(),
                {
                  component: h,
                  chunkLoadingGlobal: I,
                  loadableReady: y,
                } = null == l ? void 0 : l.default;
              return {
                component: m(h, a),
                chunkLoadingGlobal: I,
                loadableReady: y,
              };
            },
          };
        }
      );
    },
    76432: function (e, t, n) {
      var o = n(43757),
        i = n(61049),
        a = n(26513),
        r = n(16684),
        s = n.n(r),
        l = n(34754),
        p = n(70926);
      t.Z = (0, o.ff)(
        [(0, o.t6)(i.R9, l.u2), (0, o.t6)(i.$e, l.u2), a.jj, p.h],
        (
          { ooiComponentsData: e },
          { ooiComponents: t, pagesToShowSosp: n },
          o,
          i
        ) => {
          var a;
          const r =
            null === (a = o.getCurrentRouteInfo()) || void 0 === a
              ? void 0
              : a.pageId;
          return {
            name: "ooiLoadStaticCSSPageWillMountClient",
            async pageWillMount() {
              await Promise.all(
                s()
                  .chain(t)
                  .pickBy((e) => !e.isInSosp || (r && n[r]))
                  .map("widgetId")
                  .uniq()
                  .filter((t) => {
                    var n;
                    return !!(null === (n = e[t]) || void 0 === n
                      ? void 0
                      : n.isTPACssVars);
                  })
                  .map(async (t) => {
                    const { componentUrl: n, sentryDsn: o } = e[t],
                      a = n.replace(".bundle.min.js", ".min.css");
                    await (async (e, t) => {
                      const n = Array.from(
                        document.getElementsByTagName("style")
                      ).find((t) => t.getAttribute("data-href") === e);
                      if (n) return n;
                      const o = await fetch(e);
                      200 !== o.status &&
                        i.reportError(
                          new Error(
                            `Could not load CSS vars static css. CSS url: ${e}. Error: ${o.status} - ${o.statusText}`
                          ),
                          t,
                          { tags: { phase: "ooi component resolution" } }
                        );
                      const a = await o.text(),
                        r = document.createElement("style");
                      (r.innerHTML = a),
                        r.setAttribute("data-href", e),
                        document.head.appendChild(r);
                    })(a, o);
                  })
                  .value()
              );
            },
          };
        }
      );
    },
    64527: function (e, t, n) {
      n.r(t),
        n.d(t, {
          ModuleFederationSharedScopeSymbol: function () {
            return f.zY;
          },
          OOIPageComponentsLoaderSymbol: function () {
            return f.fn;
          },
          OOISsrManagerSymbol: function () {
            return f.E4;
          },
          ReactLoaderForOOISymbol: function () {
            return f.nK;
          },
          name: function () {
            return f.u2;
          },
          page: function () {
            return O;
          },
          site: function () {
            return D;
          },
        });
      var o = n(15310),
        i = n(59032),
        a = n(5096),
        r = n(43757),
        s = n(98118),
        l = n(61049),
        p = n(55048),
        c = n(44041),
        d = n(87821),
        u = n(6245),
        g = n(24548),
        f = n(34754),
        m = n(16684),
        h = n.n(m),
        I = n(20080);
      const y = (0, r.ff)(
          [
            s.C9,
            s.ku,
            (0, r.t6)(l.$e, f.u2),
            (0, r.t6)(l.R9, f.u2),
            p.xP,
            d.x,
            u.zp,
            c.r,
            g.i,
            (0, r.t6)(l.Wf, f.u2),
          ],
          (
            e,
            t,
            { ooiComponents: n, accessibilityEnabled: o },
            { viewMode: i, formFactor: a },
            r,
            s,
            l,
            { registerToThrottledScroll: p },
            { getFontsConfig: c },
            d
          ) => {
            const u = (e) => `${t}_${e}`;
            return {
              name: "ooi",
              pageWillMount() {
                h().forEach(n, (t) => {
                  const n = t.compId,
                    g = u(n),
                    f = (({
                      compData: e,
                      pageId: t,
                      accessibilityEnabled: n,
                      formFactor: o,
                      viewMode: i,
                      siteScrollBlocker: a,
                      windowScrollApi: r,
                      registerToThrottledScroll: s,
                      fonts: l,
                    }) => ({
                      styleId: e.styleId,
                      pageId: t,
                      accessibilityEnabled: n,
                      id: e.compId,
                      viewMode: i,
                      formFactor: o,
                      dimensions: e.dimensions,
                      isResponsive: e.isResponsive,
                      style: {
                        styleParams: e.style.style,
                        siteColors: e.style.siteColors,
                        siteTextPresets: e.style.siteTextPresets,
                        fonts: l,
                      },
                      appLoadBI: { loaded: h().noop },
                      scrollTo: () => r.scrollToComponent(e.compId),
                      registerToScroll: s,
                      blockScroll: () =>
                        a.setSiteScrollingBlocked(!0, e.compId),
                      unblockScroll: () =>
                        a.setSiteScrollingBlocked(!1, e.compId),
                      updateLayout: h().noop,
                      onSiteReady: (e) => e(),
                      raven: null,
                      Effect: null,
                      LazySentry: I.Z,
                    }))({
                      compData: t,
                      pageId: e,
                      accessibilityEnabled: o,
                      formFactor: a,
                      viewMode: i,
                      siteScrollBlocker: s,
                      windowScrollApi: l,
                      registerToThrottledScroll: p,
                      fonts: c(),
                    });
                  r.update({
                    [n]: {
                      host: Object.assign(Object.assign({}, f), {
                        registerToComponentDidLayout: (e) => {
                          var t;
                          const n =
                            (null === (t = d.get()) || void 0 === t
                              ? void 0
                              : t[g]) || [];
                          n.push(e),
                            d.update((e) =>
                              Object.assign(Object.assign({}, e), { [g]: n })
                            );
                        },
                        unregisterFromComponentDidLayout: () =>
                          d.update((e) => (delete e[g], e)),
                      }),
                    },
                  });
                });
              },
              pageDidMount() {
                h().forEach(n, ({ compId: e }) => {
                  var t;
                  (
                    (null === (t = d.get()) || void 0 === t
                      ? void 0
                      : t[u(e)]) || []
                  ).forEach((e) => e());
                });
              },
            };
          }
        ),
        v = (0, r.ff)([], () => ({
          getComponents() {
            return {
              tpaWidgetNative: () =>
                Promise.resolve({ component: (e) => e.ReactComponent(e) }),
            };
          },
        }));
      var w = (0, r.ff)([p.xP], (e) => ({
          getSdkHandlers: () => ({
            ooi: {
              setControllerProps: (t, n, o, i) => {
                o.forEach((e) =>
                  h().set(n, e, (...t) => {
                    i(e, t);
                  })
                ),
                  e.update({ [t]: n });
              },
            },
          }),
        })),
        P = n(70926),
        b = n(70498),
        T = (0, r.ff)([b.N2, p.xP], (e, t) => ({
          appWillRenderFirstPage: async () => {
            const n = await e.getWarmupData("ooi");
            h().forEach(null == n ? void 0 : n.failedInSsr, (e, n) => {
              t.update({ [n]: { __VIEWER_INTERNAL: { failedInSsr: !0 } } });
            });
          },
          appDidMount: async () => {
            const n = await e.getWarmupData("ooi");
            h().forEach(null == n ? void 0 : n.failedInSsr, (e, n) => {
              t.update({ [n]: { __VIEWER_INTERNAL: {} } });
            });
          },
        })),
        C = n(44263),
        S = n(26513);
      const E = (0, r.ff)(
          [(0, r.t6)(l.R9, f.u2), f.nK, (0, r.t6)(l.$e, f.u2), p.xP, P.h, S.jj],
          (
            { ooiComponentsData: e },
            t,
            { ooiComponents: n, pagesToShowSosp: o },
            i,
            a,
            r
          ) => {
            var s;
            const l =
                null === (s = r.getCurrentRouteInfo()) || void 0 === s
                  ? void 0
                  : s.pageId,
              p = (0, C.w)();
            return {
              name: "ooiLoadComponentsPageWillMountClient",
              async pageWillMount() {
                const r = h().pickBy(n, (e) => !e.isInSosp || (l && o[l]));
                await Promise.all(
                  h().map(r, async ({ widgetId: n }, o) => {
                    const {
                        component: r,
                        loadableReady: s,
                        chunkLoadingGlobal: l,
                      } = await t.getComponent(n),
                      { sentryDsn: p, isLoadable: c } = e[n];
                    r ||
                      a.reportError(new Error("component is not exported"), p, {
                        tags: { phase: "ooi component resolution" },
                      }),
                      c &&
                        s &&
                        l &&
                        (await new Promise((e) =>
                          s(e, { chunkLoadingGlobal: l, namespace: o })
                        )),
                      i.update({ [o]: { ReactComponent: r } });
                  })
                ),
                  p.resolver(h().map(r, ({ widgetId: e }) => e));
              },
            };
          }
        ),
        O = (e) => {
          e(i.j.PageWillMountHandler, i.j.PageDidMountHandler).to(y),
            e(a.CT).to(w),
            e(i.j.PageWillMountHandler).to(E),
            e(i.j.PageWillMountHandler).to(n(76432).Z);
        },
        D = (e) => {
          e(o.$8).to(v),
            e(P.h).to(P.Z),
            e(f.zY).toConstantValue({}),
            e(f.nK).to(n(24773).Z),
            e(i.j.AppWillRenderFirstPageHandler, i.j.AppDidMountHandler).to(T);
        };
    },
    20080: function (e, t, n) {
      n.d(t, {
        Z: function () {
          return i;
        },
      });
      const o = () => window.Sentry;
      class i {
        constructor(e, t = []) {
          (this.options = e),
            (this.scopes = t),
            (this._nodeClient = null),
            (this._browserClient = null);
        }
        captureException(e, t) {
          if (window.Sentry) {
            let n = o();
            n.onLoad(() => {
              (n = o()),
                this._browserClient ||
                  ((this._browserClient = new n.Hub(
                    new n.BrowserClient(this.options)
                  )),
                  this.scopes.forEach((e) => {
                    this._browserClient.configureScope(e);
                  })),
                this._browserClient.captureException(e, t);
            }),
              n.forceLoad();
          } else {
            const n = o();
            this._nodeClient ||
              ((this._nodeClient = new n.Hub(new n.NodeClient(this.options))),
              this.scopes.forEach((e) => {
                this._nodeClient.configureScope(e);
              })),
              this._nodeClient.captureException(e, t);
          }
        }
        configureScope(e) {
          const t = this._browserClient;
          t ? t.configureScope(e) : this.scopes.push(e);
        }
      }
    },
    70926: function (e, t, n) {
      n.d(t, {
        h: function () {
          return r;
        },
      });
      var o = n(43757),
        i = n(5096),
        a = n(20080);
      const r = Symbol("OOIReporter");
      t.Z = (0, o.ff)([i.Zr], ({ requestUrl: e }) => ({
        reportError: (t, n, o) => {
          if (n) {
            new a.Z({ dsn: n }).captureException(t, {
              captureContext: Object.assign(Object.assign({}, o), {
                tags: Object.assign(
                  { platform: "true", isSSR: "false", url: e },
                  null == o ? void 0 : o.tags
                ),
              }),
            });
          }
        },
      }));
    },
    21346: function (e, t, n) {
      n.r(t),
        n.d(t, {
          ooiReactComponentClientWrapper: function () {
            return c;
          },
        });
      var o = n(16684),
        i = n.n(o),
        a = n(87363),
        r = n.n(a),
        s = "TWFxr5";
      const l = r().lazy(() => n.e(1475).then(n.bind(n, 48911)));
      class p extends r().Component {
        constructor(e) {
          super(e), (this.state = { hasError: !1 });
        }
        componentDidCatch(e) {
          this.props.reporter.reportError(e, this.props.sentryDsn, {
            tags: { phase: "ooi component render" },
          });
        }
        componentWillUnmount() {
          this.props.host.unregisterFromComponentDidLayout();
        }
        static getDerivedStateFromError() {
          return { hasError: !0 };
        }
        render() {
          var e;
          const t = this.props.ReactComponent;
          return this.state.hasError ||
            !t ||
            (null === (e = this.props.__VIEWER_INTERNAL) || void 0 === e
              ? void 0
              : e.failedInSsr)
            ? r().createElement(
                a.Suspense,
                { fallback: r().createElement("div", null) },
                r().createElement(l, Object.assign({}, this.props))
              )
            : r().createElement(t, Object.assign({}, this.props));
        }
      }
      const c = (e, t) => (n) =>
        r().createElement(
          "div",
          {
            id: n.id,
            onMouseEnter: n.onMouseEnter || i().noop,
            onMouseLeave: n.onMouseLeave || i().noop,
            className: n.fitToContentHeight ? s : null,
          },
          r().createElement(
            p,
            Object.assign({}, n, { ReactComponent: e, reporter: t })
          )
        );
    },
    9605: function (e, t, n) {
      n.r(t),
        n.d(t, {
          PageScrollRegistrarSymbol: function () {
            return i.r;
          },
          name: function () {
            return l.u;
          },
          page: function () {
            return g;
          },
        });
      var o = n(59032),
        i = n(44041),
        a = n(43757),
        r = n(61049),
        s = n(5096),
        l = n(13774),
        p = n(16684),
        c = n.n(p),
        d = n(86305);
      const u = (0, a.ff)(
          [(0, a.t6)(r.Wf, l.u), s.ZQ, (0, a.jt)(d.cC)],
          (e, t, n) => {
            const o = [],
              i = [],
              a = c().throttle((e) => {
                i.forEach((t) => t(e));
              }, 100),
              r = (e) => {
                i.length > 0 &&
                  ((e) => {
                    var t, n;
                    const o = e.currentTarget,
                      i = {
                        x:
                          null !== (t = o.pageXOffset) && void 0 !== t
                            ? t
                            : o.scrollLeft,
                        y:
                          null !== (n = o.pageYOffset) && void 0 !== n
                            ? n
                            : o.scrollTop,
                      };
                    a(i);
                  })(e),
                  o.forEach((t) => t(e));
              };
            return {
              registerToThrottledScroll(e) {
                i.push(e);
              },
              registerToScroll(e) {
                o.push(e);
              },
              async pageDidUnmount() {
                t && t.removeEventListener("scroll", r);
              },
              async pageDidMount(e) {
                n && n.isLightbox(e)
                  ? n.registerToLightboxEvent("popupScroll", r)
                  : t && t.addEventListener("scroll", r);
              },
            };
          }
        ),
        g = (e) => {
          e(o.j.PageDidMountHandler, o.j.PageDidUnmountHandler, i.r).to(u);
        };
    },
    70846: function (e, t, n) {
      n.r(t),
        n.d(t, {
          PlatformPubsubSymbol: function () {
            return i.H;
          },
          TPA_PUB_SUB_PREFIX: function () {
            return o.$E;
          },
          editorPage: function () {
            return d;
          },
          name: function () {
            return i.u;
          },
          page: function () {
            return c;
          },
          stripPubSubPrefix: function () {
            return o.$H;
          },
        });
      var o = n(12073),
        i = n(21568),
        a = n(5096),
        r = n(59032),
        s = n(43757);
      const l = (0, s.ff)([i.H], (e) => ({
          getSdkHandlers: () => ({
            publish(t, n, o, i) {
              e.publish(t, "worker", {
                eventKey: n,
                isPersistent: i,
                eventData: o,
              });
            },
            subscribe(t, n, o, i) {
              e.subscribe(t, "worker", { eventKey: n, isPersistent: i }, o);
            },
            unsubscribe(t, n) {
              e.unsubscribe(t, "worker", n);
            },
          }),
        })),
        p = (0, s.ff)([i.H], (e) => ({
          pageWillUnmount() {
            e.clearListenersBesideStubs();
          },
        })),
        c = (e) => {
          e(i.H).to(o.Xr), e(a.CT).to(l), e(r.j.PageWillUnmountHandler).to(p);
        },
        d = c;
    },
    12073: function (e, t, n) {
      n.d(t, {
        $E: function () {
          return s;
        },
        $H: function () {
          return l;
        },
        Xr: function () {
          return p;
        },
      });
      var o = n(43757),
        i = n(5096),
        a = n(98118);
      const r = {},
        s = "TPA_PUB_SUB_";
      function l(e) {
        const t = new RegExp(`^${s}`);
        return e.replace(t, "");
      }
      const p = (0, o.ff)([i.ZQ, a.ku], (e, t) => {
        function n(e, t) {
          const n = { persistentData: [], listeners: {} };
          return r[e] ? r[e][t] || (r[e][t] = n) : (r[e] = { [t]: n }), r[e][t];
        }
        function o(e) {
          Object.keys(r).forEach((t) => {
            Object.keys(r[t]).forEach((o) => {
              const i = n(t, o);
              Object.entries(i.listeners).forEach(([t, n]) => {
                Object.keys(n).forEach((n) => {
                  e(n, t) && delete i.listeners[t][n];
                });
              });
            });
          });
        }
        return {
          publish(e, t, o) {
            const i = l(o.eventKey),
              a = o.isPersistent,
              r = n(e, i),
              s = r.listeners;
            if (
              (Object.entries(s).forEach(([e, n]) =>
                Object.keys(n).forEach((n) => {
                  s[e][n].forEach((e) =>
                    e({ data: o.eventData, name: i, origin: t })
                  );
                })
              ),
              a)
            ) {
              const e = o.eventData;
              r.persistentData.push({ name: i, data: e });
            }
          },
          subscribe(e, o, i, a) {
            const r = l(i.eventKey),
              s = n(e, r);
            s.listeners[t] || (s.listeners[t] = {}),
              s.listeners[t][o]
                ? "worker" === o && s.listeners[t][o].push(a)
                : (s.listeners[t][o] = [a]),
              i.isPersistent &&
                s.persistentData.length &&
                a({ data: s.persistentData[0].data, name: r, origin: o }, !0);
          },
          unsubscribe(e, t, o) {
            const i = n(e, l(o));
            Object.keys(i.listeners).forEach((e) => {
              delete i.listeners[e][t];
            });
          },
          handleIframeSubscribe(
            t,
            n,
            { eventKey: o, isPersistent: i, callId: a }
          ) {
            this.subscribe(
              t,
              n,
              { eventKey: o, isPersistent: i },
              (t, i = !1) => {
                !(function (e, t, n) {
                  const o = n.document.getElementById(e);
                  if (!o) return;
                  const i = o.getElementsByTagName("iframe")[0];
                  i &&
                    i.contentWindow &&
                    i.contentWindow.postMessage(JSON.stringify(t), "*");
                })(
                  n,
                  i
                    ? {
                        intent: "TPA_RESPONSE",
                        callId: a,
                        type: "registerEventListener",
                        res: { drain: !0, data: [t] },
                        status: !0,
                        compId: n,
                      }
                    : { eventType: o, intent: "addEventListener", params: t },
                  e
                );
              }
            );
          },
          clearListenersBesideStubs() {
            o(
              (e, n) =>
                !e.includes("tpapopup") &&
                !e.includes("tpaWorker") &&
                n === t &&
                "masterPage" !== n
            );
          },
          clearListenersByCompId(e) {
            o((t) => t === e);
          },
        };
      });
    },
    4308: function (e, t, n) {
      n.r(t),
        n.d(t, {
          page: function () {
            return w;
          },
          site: function () {
            return v;
          },
        });
      var o,
        i = n(43757),
        a = n(61049),
        r = n(77747);
      !(function (e) {
        (e.SM = "SM"), (e.Pass = "PASS"), (e.NONE = "NONE");
      })(o || (o = {}));
      const s = (0, i.ff)(
        [(0, i.t6)(a.jC, r.u), (0, i.t6)(a.R9, r.u), (0, i.t6)(a.Wf, r.u)],
        (e, t, n) => ({
          async handle(i) {
            if (i.pageJsonFileName) return i;
            const a = i.pageId,
              { pagesMap: r, loginAndNavigate: s } = n.get();
            if (r[a])
              return Object.assign(Object.assign({}, i), {
                pageJsonFileName: r[a],
              });
            const l = ((n) => {
              const i = e.pagesSecurity[n];
              return i && i.requireLogin
                ? o.SM
                : t.passwordProtected[n] || (i && i.passwordDigest)
                ? o.Pass
                : o.NONE;
            })(a);
            return (
              l === o.NONE &&
                ((e, t) => {
                  throw new Error(
                    `we do not have authentication info for protected page ${e} page security: ${t}`
                  );
                })(a, e.pagesSecurity[a]),
              s(i, l),
              null
            );
          },
        })
      );
      var l = n(19238),
        p = n(95848),
        c = n(2811),
        d = n(27531),
        u = n(26513),
        g = n(5096),
        f = n(82627);
      const m = (0, i.ff)(
        [
          (0, i.t6)(a.Wf, r.u),
          (0, i.t6)(a.R9, r.u),
          (0, i.t6)(a.jC, r.u),
          l.F0,
          u.jj,
          (0, i.jt)(c.n9),
          (0, i.jt)(d.RC),
          g.EE,
          f.O,
        ],
        (
          e,
          { publicPageIds: t },
          { customNoPermissionsPageUrl: n, customNoPermissionsPageId: i },
          a,
          r,
          s,
          l,
          c,
          d
        ) => {
          const u = async (e, t) =>
              e === o.SM
                ? (async () => {
                    let e;
                    if (s)
                      if (d["specs.thunderbolt.newAuthorizedPagesFlow"]) {
                        if (((e = await s.requestAuthorizedPages()), e.success))
                          return { authorizedPagesMap: e.pages };
                      } else if (
                        ((e = await s.requestAuthentication({})), e.success)
                      )
                        return {
                          authorizedPagesMap:
                            await s.authorizeMemberPagesByToken(e.token),
                        };
                    return { authorizedPagesMap: {}, authenticationResult: e };
                  })()
                : (async (e) =>
                    l ? l.promptPasswordDialog(e) : { authorizedPagesMap: {} })(
                    t
                  ),
            g = async (e, t, o = !1) => {
              if (n && o)
                return a.navigate(
                  `${n}?appSectionParams={"restrictedPageId":"${e}"}`
                );
              if (s && "SM" === t) {
                const e = () => {
                  r.isLandingOnProtectedPage() && a.navigate("./");
                };
                return s.showNoPermissionsToPageDialog(e), !1;
              }
              return !!r.isLandingOnProtectedPage() && a.navigate("./");
            },
            f = async (n, o) => {
              const s = n.pageId;
              try {
                const { authorizedPagesMap: l, authenticationResult: c } =
                  await u(o, s);
                if (
                  (e.update((e) =>
                    Object.assign(Object.assign({}, e), {
                      pagesMap: Object.assign(e.pagesMap, l),
                    })
                  ),
                  (null == c ? void 0 : c.reason) === p.$9.CANCELED)
                )
                  return !!r.isLandingOnProtectedPage() && a.navigate("./");
                if (l[s]) return a.navigate(n.parsedUrl.href);
                {
                  const e = t.includes(i),
                    n = !!l[i];
                  return g(s, o, e || n);
                }
              } catch (e) {
                return (
                  c.captureError(e, { tags: { feature: "protectedPage" } }),
                  g(s, o)
                );
              }
            };
          return (
            e.update(() => ({ loginAndNavigate: f, pagesMap: {} })),
            { appWillMount: async () => {} }
          );
        }
      );
      var h = n(59032),
        I = n(95793);
      const y = (0, i.ff)([(0, i.t6)(a.Wf, r.u), c.n9], (e, t) => ({
          getTpaHandlers() {
            return {
              authorizeMemberPages: async () => {
                const n = await t.authorizeMemberPagesByCookie();
                e.update((e) =>
                  Object.assign(Object.assign({}, e), {
                    pagesMap: Object.assign(Object.assign({}, e.pagesMap), n),
                  })
                );
              },
            };
          },
        })),
        v = (e) => {
          e(l.BD.Protected).to(s), e(h.j.AppWillMountHandler).to(m);
        },
        w = (e) => {
          e(I.go).to(y);
        };
    },
    63743: function (e, t, n) {
      n.r(t),
        n.d(t, {
          SamePageScrollSymbol: function () {
            return s.Od;
          },
          name: function () {
            return s.u2;
          },
          page: function () {
            return H;
          },
        });
      var o = n(59032),
        i = n(55031),
        a = n(43757),
        r = n(61049),
        s = n(47399),
        l = n(16684),
        p = n.n(l);
      const c = (0, a.ff)(
        [(0, a.t6)(r.$e, s.u2), (0, a.t6)(r.Wf, s.u2), s.kk],
        ({ anchorDataIdToCompIdMap: e }, t, { getHandler: n }) => ({
          name: "samePageScroll",
          pageWillMount() {
            t.update((t) => Object.assign(Object.assign({}, t), e));
          },
          scrollToAnchor: n(),
          pageWillUnmount() {
            t.update((t) => p().omit(t, Object.keys(e)));
          },
        })
      );
      var d = n(26513),
        u = n(82627),
        g = n(6245),
        f = n(26457),
        m = n(86305);
      const h = (0, a.ff)(
          [(0, a.t6)(r.$e, s.u2), d.jj, g.zp, u.O, (0, a.jt)(m.r5)],
          (
            { nicknameToCompIdMap: e, anchorDataIdToCompIdMap: t },
            n,
            o,
            i,
            a
          ) => ({
            appDidLoadPage: ({ pageId: i }) => {
              const r = n.getCurrentRouteInfo();
              if ((null == a ? void 0 : a.isLightbox(i)) || !r) return;
              const { anchorDataId: s, parsedUrl: l } = r;
              if (s) {
                const n = l.hash.endsWith(s),
                  i = f.JC.includes(s) || n ? s : t[s] || e[s],
                  a = s === f.LB;
                o.scrollToComponent(i, {
                  callbacks: void 0,
                  skipScrollAnimation: a,
                });
              }
            },
          })
        ),
        I = (0, a.ff)([(0, a.t6)(r.Wf, s.u2)], (e) => ({
          getAnchorCompId: (t) => e.get()[t],
        }));
      var y = n(31428),
        v = n(19238);
      const w = (0, a.ff)([s.Od, v.Iz], (e, t) => ({
        handleClick: (n) => {
          const o = n.getAttribute("href");
          if (!o) return !1;
          if ("#" === o) return e.scrollToAnchor({ anchorDataId: f.LB });
          const i = (0, y.fx)(o, t.getParsedUrl().protocol),
            a = (0, y.GD)((0, y.Gw)(i)) === t.getFullUrlWithoutQueryParams();
          if ("_blank" === n.getAttribute("target") || !a) return !1;
          const r = n.getAttribute("data-anchor-comp-id") || (0, y.AE)(i) || "",
            s = n.getAttribute("data-anchor") || "";
          return r || s || !a
            ? e.scrollToAnchor({ anchorDataId: s, anchorCompId: r })
            : (t.pushUrlState(new URL(i)),
              e.scrollToAnchor({ anchorDataId: f.LB }));
        },
      }));
      var P = n(55048);
      const b = (0, a.ff)(
        [(0, a.t6)(r.$e, s.u2), P.xP, s.Sc],
        ({ compsToUpdate: e }, t, { getPropsOverrides: n }) => ({
          name: "samePageAnchorHrefUpdater",
          pageWillMount: () => {
            if (e.length > 0) {
              const o = e.reduce((e, t) => {
                const o = n(t);
                return Object.assign(Object.assign({}, e), o);
              }, {});
              t.update(o);
            }
          },
        })
      );
      var T = n(5096);
      const C = (0, a.ff)(
          [s.LL, T.ZQ, g.zp, P.vA],
          ({ getAnchorCompId: e }, t, n, o) => ({
            getHandler: () => (i) => {
              var a, r;
              const s = null !== (a = i.anchorDataId) && void 0 !== a ? a : "",
                l = null !== (r = i.anchorCompId) && void 0 !== r ? r : "";
              if (f.JC.includes(s)) return n.scrollToComponent(s), !0;
              const p = o.get(l),
                c = t.document.getElementById(l);
              if (p || c) return n.scrollToComponent(l), !0;
              const d = e(s) || "";
              return !!o.get(d) && (n.scrollToComponent(d), !0);
            },
          })
        ),
        S =
          /^<([-A-Za-z0-9_?:]+)((?:\s+(?:x:)?[-A-Za-z0-9_]+(?:\s*=\s*(?:(?:"[^"]*")|(?:'[^']*')|[^>\s]+))?)*)\s*(\/?)>/,
        E = /^<\/([-A-Za-z0-9_?:]+)[^>]*>/,
        O =
          /((?:x:)?[-A-Za-z0-9_]+)(?:\s*=\s*(?:(?:"((?:\\.|[^"])*)")|(?:'((?:\\.|[^'])*)')|([^>\s]+)))?/g,
        D = N(
          "area,base,basefont,br,col,frame,hr,img,input,isindex,link,meta,param,embed"
        ),
        M = N(
          "address,applet,blockquote,button,center,dd,del,dir,div,dl,dt,fieldset,form,frameset,hr,iframe,ins,isindex,li,map,menu,noframes,noscript,object,ol,p,pre,script,table,tbody,td,tfoot,th,thead,tr,ul"
        ),
        R = N(
          "a,abbr,acronym,applet,b,basefont,bdo,big,br,button,cite,code,del,dfn,em,font,i,iframe,img,input,ins,kbd,label,map,object,q,s,samp,script,select,small,span,strike,strong,sub,sup,textarea,tt,u,var"
        ),
        j = N("colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr"),
        x = N(
          "checked,compact,declare,defer,disabled,ismap,multiple,nohref,noresize,noshade,nowrap,readonly,selected"
        ),
        A = N("script,style");
      function L(e, t) {
        return (
          (t = t
            .replace(/<!--(.*?)-->/g, "$1")
            .replace(/<!\[CDATA\[(.*?)]]>/g, "$1")),
          this.chars && this.chars(t),
          ""
        );
      }
      const k = (e, t) => {
        let n,
          o,
          i,
          a = e;
        const r = [];
        for (
          r.last = function () {
            return this[this.length - 1];
          };
          e;

        ) {
          if (((o = !0), r.last() && A[r.last()]))
            (e = e.replace(
              new RegExp(`(.*)</${r.last()}[^>]*>`, "i"),
              L.bind(t)
            )),
              l("", r.last());
          else if (
            (0 === e.indexOf("\x3c!--")
              ? ((n = e.indexOf("--\x3e")),
                n >= 0 &&
                  (t.comment && t.comment(e.substring(4, n)),
                  (e = e.substring(n + 3)),
                  (o = !1)))
              : 0 === e.indexOf("</")
              ? ((i = e.match(E)),
                i &&
                  ((e = e.substring(i[0].length)),
                  i[0].replace(E, l),
                  (o = !1)))
              : 0 === e.indexOf("<") &&
                ((i = e.match(S)),
                i &&
                  ((e = e.substring(i[0].length)),
                  i[0].replace(S, s),
                  (o = !1))),
            o)
          ) {
            n = e.indexOf("<");
            const o = n < 0 ? e : e.substring(0, n);
            (e = n < 0 ? "" : e.substring(n)), t.chars && t.chars(o);
          }
          if (e === a) throw `Parse Error: ${e}`;
          a = e;
        }
        function s(e, n, o, i) {
          if (((n = n.toLowerCase()), M[n]))
            for (; r.last() && R[r.last()]; ) l("", r.last());
          if (
            (j[n] && r.last() === n && l("", n),
            (i = D[n] || !!i) || r.push(n),
            t.start)
          ) {
            const a = [];
            o.replace(O, function (e, t) {
              let n = null;
              for (let e = 2; e < 5; e++)
                if (null === n && arguments[e]) {
                  n = arguments[e];
                  break;
                }
              null === n && x[t] && (n = t),
                null === n && (n = ""),
                a.push({
                  name: t,
                  value: n,
                  escaped: n.replace(/(^|[^\\])"/g, '$1\\"'),
                });
            }),
              t.start && t.start(n, a, i, e);
          }
        }
        function l(e, n) {
          let o;
          if (n) for (o = r.length - 1; o >= 0 && r[o] !== n; o--);
          else o = 0;
          if (o >= 0) {
            for (let e = r.length - 1; e >= o; e--) t.end && t.end(r[e]);
            r.length = o;
          }
        }
        l();
      };
      function N(e) {
        const t = {},
          n = e.split(",");
        for (const e of n) t[e] = !0;
        return t;
      }
      const _ = (0, a.ff)([P.xP, v.Iz], (e, t) => {
          const n = (e, t) => {
              var n, o, i;
              const a = ["SCROLL_TO_TOP", "SCROLL_TO_BOTTOM"].includes(
                  (null === (n = null == e ? void 0 : e.link) || void 0 === n
                    ? void 0
                    : n.anchorDataId) || ""
                ),
                r =
                  null ===
                    (i =
                      null === (o = null == e ? void 0 : e.link) || void 0 === o
                        ? void 0
                        : o.href) || void 0 === i
                    ? void 0
                    : i.endsWith("/CURRENT_INNER_ROUTE");
              return Object.assign(
                Object.assign({}, e),
                a || r
                  ? {
                      link: Object.assign(Object.assign({}, e.link), {
                        href: t,
                      }),
                    }
                  : { link: e.link }
              );
            },
            o = (e, t) =>
              Object.assign(
                Object.assign({}, n(e, t)),
                e.items && { items: e.items.map((e) => o(e, t)) }
              ),
            i = (t, n) => {
              const i = e.get(t);
              return { items: (i.items || i.options).map((e) => o(e, n)) };
            },
            a = {
              QuickActionBarItem: (t, n, o) =>
                ((t, n, o) => ({
                  items: e
                    .get(o)
                    .items.map((e) =>
                      e.compId === t
                        ? Object.assign(Object.assign({}, e), {
                            link: Object.assign(Object.assign({}, e.link), {
                              href: n,
                            }),
                          })
                        : e
                    ),
                }))(t, n, o),
              DropDownMenu: (e, t) => i(e, t),
              ExpandableMenu: (e, t) => i(e, t),
              WRichText: (t, n) =>
                ((t, n) => {
                  const o = e.get(t).html,
                    i = new Map();
                  let a = o;
                  try {
                    if (
                      (k(o, {
                        start(e, t, o, a) {
                          if (
                            "a" === e &&
                            Boolean(
                              p().find(t, (e) => {
                                const { name: t, value: n } = e,
                                  o =
                                    "data-anchor" === t &&
                                    (n === f.TL || n === f.LB),
                                  i =
                                    "href" === t &&
                                    (null == n
                                      ? void 0
                                      : n.endsWith("/CURRENT_INNER_ROUTE"));
                                return o || i;
                              })
                            )
                          ) {
                            const e = a.replace(/href="(.*?)"/, `href="${n}"`);
                            i.set(a, e);
                          }
                        },
                      }),
                      i.size > 0)
                    ) {
                      const e = [...i.keys()],
                        t = new RegExp(e.join("|"), "g");
                      a = o.replace(t, (e) => i.get(e));
                    }
                  } catch (e) {}
                  return { html: a };
                })(t, n),
              VerticalMenu: (e, t) => i(e, t),
              StylableHorizontalMenu: (e, t) => i(e, t),
              LinkBar: (t, o) =>
                ((t, o) => ({ images: e.get(t).images.map((e) => n(e, o)) }))(
                  t,
                  o
                ),
            };
          return {
            getPropsOverrides: ({ compId: n, compType: o, parentId: i }) => {
              const r = t.getFullUrlWithoutQueryParams(),
                s = "QuickActionBarItem" === o ? i : n,
                l = a[o];
              return {
                [s]: l
                  ? l(n, r, i)
                  : {
                      link: Object.assign(Object.assign({}, e.get(s).link), {
                        href: r,
                      }),
                    },
              };
            },
          };
        }),
        H = (e) => {
          e(o.j.AppDidLoadPageHandler).to(h),
            e(s.kk).to(C),
            e(s.LL).to(I),
            e(s.Od, o.j.PageWillMountHandler, o.j.PageWillUnmountHandler).to(c),
            e(i.et).to(w),
            e(s.Sc).to(_),
            e(o.j.PageWillMountHandler).to(b);
        };
    },
    36054: function (e, t, n) {
      n.r(t),
        n.d(t, {
          editor: function () {
            return c;
          },
          name: function () {
            return l.t;
          },
          namespace: function () {
            return l.u;
          },
          site: function () {
            return p;
          },
        });
      var o = n(5096),
        i = n(21924),
        a = n(43757);
      const r = (0, a.ff)([i.QJ], (e) => ({
          getSdkHandlers: () => ({
            seo: {
              async setTitle(t) {
                await e.setVeloTitle(t);
              },
              async setLinks(t) {
                await e.setVeloLinks(t);
              },
              async setMetaTags(t) {
                await e.setVeloMetaTags(t);
              },
              async setStructuredData(t) {
                await e.setVeloStructuredData(t);
              },
              async setSeoStatusCode(t) {
                await e.setVeloSeoStatusCode(t);
              },
              async renderSEOTags(t) {
                await e.setVeloSeoTags(t);
              },
              async resetSEOTags() {
                await e.resetVeloSeoTags();
              },
              async onTPAOverrideChanged(t) {
                return e.onTPAOverridesChanged(t);
              },
            },
          }),
        })),
        s = (0, a.ff)([i.QJ], (e) => {
          const t = e.getSiteLevelSeoData();
          return { platformEnvData: { seo: Object.assign({}, t) } };
        });
      var l = n(40767);
      const p = (e) => {
          e(o.nB).to(s), e(o.CT).to(r);
        },
        c = p;
    },
    74705: function (e, t, n) {
      n.r(t),
        n.d(t, {
          name: function () {
            return s.t;
          },
          namespace: function () {
            return s.u;
          },
          site: function () {
            return c;
          },
        });
      var o = n(5096),
        i = n(43757),
        a = n(82627),
        r = n(61049),
        s = n(64922);
      const l = (0, i.ff)(
          [a.O, (0, i.t6)(r.R9, s.t), o.Zr, o.ZQ],
          (e, t, n, o) => {
            const {
              mode: i,
              site: { isResponsive: a },
            } = n;
            return {
              get platformEnvData() {
                const { pageIdToTitle: n, viewMode: r } = t || {};
                return {
                  site: {
                    experiments: e,
                    isResponsive: a,
                    pageIdToTitle: n,
                    mode: i,
                    viewMode: r,
                    windowName: null == o ? void 0 : o.name,
                  },
                };
              },
            };
          }
        ),
        p = (0, i.ff)([(0, i.jt)(r.o8)], (e) => ({
          getSdkHandlers: () => ({
            getSitemapFetchParams: (t) =>
              e ? e.getSitemapFetchParams(t) : null,
          }),
        })),
        c = (e) => {
          e(o.nB).to(l), e(o.CT).to(p);
        };
    },
    37662: function (e, t, n) {
      n.r(t),
        n.d(t, {
          SiteMapSymbol: function () {
            return p.Cc;
          },
          TpaEventsListenerManagerSymbol: function () {
            return p.PV;
          },
          TpaFullScreenModeSymbol: function () {
            return p.u5;
          },
          TpaModalSymbol: function () {
            return p.R3;
          },
          TpaPopupSymbol: function () {
            return i.jn;
          },
          TpaSymbol: function () {
            return p.e4;
          },
          name: function () {
            return p.u2;
          },
          page: function () {
            return Ut;
          },
        });
      var o = n(59032),
        i = n(95793),
        a = n(43757),
        r = n(61049),
        s = n(55048),
        l = n(5096),
        p = n(7259),
        c = n(20140),
        d = n(3744),
        u = n(37793),
        g = n(54163),
        f = n(69873);
      const m = (0, a.ff)(
        [
          (0, a.t6)(r.R9, c.u2),
          (0, a.t6)(r.$e, p.u2),
          (0, a.fi)(i.go),
          s.xP,
          l.ZQ,
          l.Zr,
          (0, a.jt)(g.m),
          (0, a.jt)(u.KO),
        ],
        (e, t, n, o, i, { mode: { debug: a } }, r, s) => {
          const { appsClientSpecMapData: l } = e,
            p = ({
              tpa: e,
              origin: n,
              callId: o,
              status: i,
              res: a,
              compId: r,
            }) => {
              const l = {
                callId: o,
                intent: "TPA_RESPONSE",
                status: i,
                res: a,
              };
              s &&
                s.tpa.addMessage({
                  message: l,
                  compId: r,
                  contextId: t.pageId,
                  origin: n,
                }),
                e.postMessage(JSON.stringify(l), "*");
            },
            c = Object.assign({}, ...n.map((e) => e.getTpaHandlers()));
          return {
            async handleMessage({ source: n, origin: i, message: s }) {
              const {
                  type: u,
                  callId: g,
                  compId: m,
                  data: h,
                  deviceType: I,
                  originFrame: y,
                } = s,
                v = ((e) => {
                  var t, n;
                  const i =
                    (null === (t = o.get(e)) || void 0 === t
                      ? void 0
                      : t.src) ||
                    (null === (n = o.get(e)) || void 0 === n ? void 0 : n.url);
                  return i ? new URL(i) : null;
                })(m);
              if (
                "https://static.parastorage.com" !== i &&
                !((e, t) => (null == e ? void 0 : e.origin) === t)(v, i) &&
                !((e) =>
                  "https://editor.wix.com" === e ||
                  "https://create.editorx.com" === e ||
                  "https://blocks.wix.com" === e)(i)
              )
                return void (
                  a &&
                  console.warn("discarded tpa message: untrusted origin", {
                    origin: i,
                    message: s,
                  })
                );
              const w = c[u];
              if (!w)
                return void (
                  a &&
                  console.warn(
                    `TpaHandlerError: ${u} handler is not implemented`
                  )
                );
              const P = d.O.getOriginCompId(m),
                b = t.widgets[P],
                T = null == r ? void 0 : r.isTpaWorker(m),
                C = T ? r.getWorkerDetails(m) : null,
                S = T
                  ? C.appDefinitionId
                  : null == b
                  ? void 0
                  : b.appDefinitionId,
                E = w(m, h, {
                  callId: g,
                  tpa: n,
                  appDefinitionId: S,
                  tpaCompData: b,
                  appClientSpecMapData: l[S],
                  originCompId: P,
                  viewMode: e.viewMode,
                });
              if (void 0 !== E)
                try {
                  const e = await E;
                  if (e === f.rV) return;
                  p({
                    tpa: n,
                    origin: i,
                    callId: g,
                    compId: m,
                    status: !0,
                    res: e,
                  });
                } catch (e) {
                  const { message: t, name: o, stack: a } = e;
                  p({
                    tpa: n,
                    origin: i,
                    callId: g,
                    compId: m,
                    status: !1,
                    res: { error: { message: t, name: o, stack: a } },
                  });
                }
            },
          };
        }
      );
      var h = n(29203);
      const I = (0, a.ff)([(0, a.t6)(r.$e, p.u2), h.e, p.PV], (e, t, n) => {
          const o = (t) => {
            Object.entries(e.widgets).forEach((e) => {
              n.dispatch("CONSENT_POLICY_UPDATE", () => t, { compId: e[0] });
            });
          };
          return {
            pageDidMount() {
              return t.registerToChanges(o);
            },
          };
        }),
        y = ({
          tpaModal: e,
          tpaPopup: t,
          compId: n = "",
          onCloseMessage: o,
        }) => {
          t.isPopup(n) ? t.closePopup(n, o) : e.closeModal(o);
        },
        v = (0, a.ff)([p.R3, i.jn], (e, t) => ({
          getTpaHandlers() {
            return {
              onEscapeClicked: (n) => {
                y({ tpaModal: e, tpaPopup: t, compId: n });
              },
            };
          },
        }));
      var w = n(50287);
      const P = (0, a.ff)(
          [(0, a.t6)(r.R9, c.u2), (0, a.jt)(w.d)],
          ({ externalBaseUrl: e }, t) => ({
            getTpaHandlers() {
              return {
                async getCustomizedUrlSegments(o, i) {
                  const { url: a, options: r } = i,
                    s = null == t ? void 0 : t.urlMappings,
                    { getCustomizedUrlSegments: l } = await n
                      .e(862)
                      .then(n.bind(n, 47194));
                  return l(s, a, Object.assign({ baseUrl: e }, r));
                },
              };
            },
          })
        ),
        b = (0, a.ff)(
          [(0, a.t6)(r.R9, c.u2), (0, a.jt)(w.d)],
          ({ externalBaseUrl: e }, t) => ({
            getTpaHandlers() {
              return {
                async buildCustomizedUrl(o, i) {
                  const { key: a, itemData: r, options: s } = i,
                    l = null == t ? void 0 : t.urlMappings,
                    { buildCustomizedUrl: p } = await n
                      .e(862)
                      .then(n.bind(n, 47194));
                  return p(l, a, r, Object.assign({ baseUrl: e }, s));
                },
              };
            },
          })
        );
      var T = n(16684),
        C = n.n(T),
        S = n(63140),
        E = n(19238),
        O = n(86305),
        D = n(88902);
      const M = (0, a.ff)(
          [
            (0, a.t6)(r.R9, c.u2),
            (0, a.t6)(r.$e, p.u2),
            (0, a.t6)(r.jC, p.u2),
            E.kc,
            (0, a.jt)(O.rW),
            (0, a.jt)(D.HC),
          ],
          (e, t, n, o, i, a) => ({
            getTpaHandlers() {
              return {
                getStateUrl(r, s, { originCompId: l }) {
                  const {
                      metaSiteId: p,
                      userFileDomainUrl: c,
                      routersConfig: d,
                      appsClientSpecMapByApplicationId: u,
                      externalBaseUrl: g,
                      isMobileView: f,
                      isPremiumDomain: m,
                      experiments: h,
                    } = e,
                    I = (0, S.b)({
                      routingInfo: o.getLinkUtilsRoutingInfo(),
                      metaSiteId: p,
                      userFileDomainUrl: c,
                      routersConfig: d,
                      popupPages: null == i ? void 0 : i.getLightboxPages(),
                      multilingualInfo:
                        null == a ? void 0 : a.getMultilingualInfo(),
                      isMobileView: f,
                      isPremiumDomain: m,
                      experiments: h,
                    }),
                    y = C()(n.pagesData)
                      .groupBy("tpaApplicationId")
                      .mapValues((e) => e.map((e) => e.id))
                      .value(),
                    v = Object.entries(n.pagesData)
                      .map(([e, t]) => ({ [t.tpaPageId]: e }))
                      .reduce(C().assign),
                    { state: w, sectionId: P } = s,
                    b = ((T = l), t.widgets[T].applicationId);
                  var T;
                  const E = u[b],
                    O = y[b];
                  if (!O || 0 === O.length)
                    return {
                      error: {
                        message: `Page with app "${E.appDefinitionName}" was not found.`,
                      },
                    };
                  const D = {
                    type: "TpaPageLink",
                    pageId: v[P] || O[0],
                    path: w,
                  };
                  return { url: `${g}${I.getLinkUrlFromDataItem(D)}` };
                },
              };
            },
          })
        ),
        R = (0, a.ff)([(0, a.t6)(r.$e, p.u2)], ({ widgets: e }) => ({
          getTpaHandlers() {
            return {
              getStyleParamsByStyleId(t, n) {
                const o = Object.values(e).find((e) => e.styleId === n.styleId),
                  i = null == o ? void 0 : o.style;
                return i
                  ? Object.assign({}, i)
                  : {
                      error: {
                        message: `Style id "${n.styleId}" was not found.`,
                      },
                    };
              },
            };
          },
        }));
      var j = n(49574),
        x = n(56405),
        A = n(81600);
      const L = (0, a.ff)(
          [l.Zr, (0, a.t6)(r.R9, c.u2), x.Xb, l.ZQ, j.U],
          (e, { externalBaseUrl: t }, n, o, i) => {
            const a = (e) =>
                Object.assign(
                  {
                    activityDetails: { additionalInfoUrl: null, summary: "" },
                    activityInfo: "activityInfo",
                    activityType: "activityType",
                    contactUpdate: {},
                    activityLocationUrl: o.location.href,
                    createdAt: new Date().toISOString(),
                  },
                  e
                ),
              r = ((e, t) => (n) => {
                const o = new URL(t);
                return (
                  Object.entries(n.params).forEach(([e, t]) => {
                    t && o.searchParams.append(e, t);
                  }),
                  e.envFetch(o.href, {
                    method: "POST",
                    body: JSON.stringify(n.payload),
                    headers: { "Content-Type": "application/json" },
                  })
                );
              })(i, `${t}/_api/app-integration-bus-web/v1/activities`);
            return {
              getTpaHandlers() {
                return {
                  postActivity: (0, A.u)(
                    ["site"],
                    (t, { activity: o }, { appDefinitionId: i }) => {
                      var s;
                      return (async (e) => {
                        const t = await r(e);
                        if (!t.ok)
                          return {
                            status: !1,
                            response: {
                              status: t.status,
                              statusText: t.statusText,
                              responseText: await t.text(),
                            },
                          };
                        const {
                          userSessionToken: o,
                          activityId: i,
                          contactId: a,
                        } = await t.json();
                        return (
                          o && n.setUserSession(o),
                          {
                            status: !0,
                            response: { activityId: i, contactId: a },
                          }
                        );
                      })({
                        params:
                          ((s = {
                            "application-id": i || "TPA",
                            instance: n.getAppInstanceByAppDefId(i),
                          }),
                          Object.assign(
                            {
                              hs: n.getHubSecurityToken(),
                              "activity-id": "xxxxxxxx".replace(/x/g, () =>
                                ((16 * Math.random()) | 0).toString(16)
                              ),
                              "metasite-id": e.site.metaSiteId,
                              svSession: n.getUserSession(),
                              version: "1.0.0",
                            },
                            s
                          )),
                        payload: a({
                          contactUpdate: o.contactUpdate || {},
                          activityInfo: o.info || {},
                          activityType: o.type || "TPA",
                          activityDetails: o.details || {},
                        }),
                      });
                    }
                  ),
                };
              },
            };
          }
        ),
        k = (0, a.ff)([x.Xb], (e) => ({
          getTpaHandlers() {
            return {
              getCtToken() {
                return e.getCtToken();
              },
              getUserSession() {
                return e.getUserSession();
              },
            };
          },
        }));
      var N = n(26513);
      const _ = (0, a.ff)(
          [E.Iz, N.jj, (0, a.t6)(r.R9, c.u2)],
          (e, t, { routerByPrefix: n }) => ({
            getTpaHandlers() {
              return {
                getCurrentPageNavigationInfo() {
                  const o = e.getRelativeUrl(),
                    { type: i, pageId: a } = t.getCurrentRouteInfo();
                  if ("Static" === i) return { type: "PageLink", pageId: a };
                  const [, r, ...s] = o.split("/");
                  return {
                    type: "DynamicPageLink",
                    routerId: n[r],
                    innerRoute: s.join("/") || "/",
                  };
                },
              };
            },
          })
        ),
        H = (0, a.ff)([l.ZQ], (e) => ({
          getTpaHandlers() {
            return {
              getAdsOnPage() {
                const t = e.document.getElementById("WIX_ADS");
                if (!t) return {};
                const {
                  height: n,
                  width: o,
                  x: i,
                  y: a,
                } = t.getBoundingClientRect();
                return { top: { height: n, width: o, top: a, left: i } };
              },
            };
          },
        }));
      var U = n(96616),
        B = n(60091),
        F = n(95100);
      const $ = (0, a.ff)(
        [
          (0, a.t6)(r.R9, c.u2),
          (0, a.t6)(r.$e, p.u2),
          l.Zr,
          N.jj,
          s.xP,
          B.q,
          p.PV,
          E.kc,
          (0, a.jt)(O.rW),
          (0, a.jt)(F.Ai),
          (0, a.jt)(D.HC),
        ],
        (e, t, n, o, i, a, r, s, l, p, c) => ({
          getTpaHandlers() {
            const n = (t = s.getLinkUtilsRoutingInfo()) => {
                const {
                  metaSiteId: n,
                  userFileDomainUrl: o,
                  routersConfig: i,
                  isMobileView: a,
                  isPremiumDomain: r,
                  experiments: p,
                } = e;
                return (0, S.b)({
                  routingInfo: t,
                  metaSiteId: n,
                  userFileDomainUrl: o,
                  routersConfig: i,
                  popupPages: null == l ? void 0 : l.getLightboxPages(),
                  multilingualInfo:
                    null == c ? void 0 : c.getMultilingualInfo(),
                  isMobileView: a,
                  isPremiumDomain: r,
                  experiments: p,
                });
              },
              o = async ({
                compId: e,
                state: o,
                skipHistory: i,
                queryParams: r = {},
                disableScrollToTop: l = !0,
              }) => {
                var p;
                const c = s.getLinkUtilsRoutingInfo(),
                  d = n(c),
                  { widgets: u } = t;
                if (
                  !(null === (p = u[e]) || void 0 === p ? void 0 : p.isSection)
                )
                  return;
                const g = { type: "TpaPageLink", pageId: c.pageId, path: o },
                  f = `${d.getLinkUrlFromDataItem(g)}${
                    C().isEmpty(r)
                      ? ""
                      : `?appSectionParams=${encodeURIComponent(
                          JSON.stringify(r)
                        )}`
                  }`,
                  m = d.getLinkProps(f);
                await a.navigateTo(m, {
                  skipHistory: i,
                  disableScrollToTop: l,
                });
              };
            return {
              async replaceSectionState(e, { state: t, queryParams: n }) {
                return o({
                  compId: e,
                  skipHistory: !0,
                  state: t,
                  queryParams: n,
                });
              },
              async appStateChanged(e, { state: t }) {
                let r;
                try {
                  r = JSON.parse(t);
                } catch (e) {
                  r = null;
                }
                const l = (t, ...n) => {
                    t[U.O] ? t({ args: n, compId: e }) : t(...n);
                  },
                  c = (t) => {
                    const n = i.get(e).onItemClicked;
                    n &&
                      l(n, {
                        type: "itemClicked",
                        itemIndex: t,
                        item: i.get(e).images[t],
                      });
                  };
                if (!r) return o({ compId: e, skipHistory: !1, state: t });
                {
                  const t = {
                    zoom: () => {
                      const [t] = r.args,
                        { id: n } = i.get(e).images[t];
                      p.openImageZoom(e, n), c(t);
                    },
                    itemClicked: () => {
                      const [e] = r.args;
                      c(e);
                    },
                    itemChanged: () => {
                      const [t] = r.args,
                        n = i.get(e).onCurrentItemChanged;
                      n &&
                        l(n, {
                          type: "imageChanged",
                          itemIndex: t,
                          item: i.get(e).images[t],
                        });
                    },
                    componentReady: () => {
                      i.update({ [e]: { componentReady: !0 } });
                    },
                    navigateToDynamicPage: () => {
                      const [e] = r.args,
                        t = n(),
                        o = (0, S.j)(e)
                          ? e
                          : t.getLinkProps(t.getLinkUrlFromDataItem(e));
                      a.navigateTo(o);
                    },
                    navigateToAnchor: () => {
                      const [e, t] = r.args,
                        o = {
                          type: "PageLink",
                          pageId:
                            "masterPage" === e
                              ? s.getLinkUtilsRoutingInfo().pageId
                              : e,
                          target: "_self",
                        },
                        i = n(),
                        l = i.getLinkUrlFromDataItem(o),
                        p = i.getLinkProps(l),
                        c = Object.assign(p, t);
                      a.navigateTo(c);
                    },
                  }[r.cmd];
                  t && t();
                }
              },
            };
          },
        })
      );
      var W = n(58629),
        z = n(10666);
      const V = (0, a.ff)(
          [(0, a.t6)(r.R9, c.u2), W.s, N.jj, (0, a.jt)(E.R1), (0, a.jt)(z.$)],
          ({ debug: e }, t, n, o, i) => ({
            getTpaHandlers() {
              return {
                applicationLoadingStep(
                  t,
                  a,
                  { appDefinitionId: r, tpaCompData: { widgetId: s } = {} }
                ) {
                  if (d.O.isRuntimeCompId(t))
                    return void (
                      e &&
                      console.warn(
                        `applicationLoadingStep is ignored in runtime component ${t}`
                      )
                    );
                  const l = n.getCurrentRouteInfo(),
                    p = Math.round(performance.now()),
                    { stage: c, stageNum: u } = a;
                  null == i ||
                    i.logger.log(
                      {
                        appId: r,
                        widget_id: s,
                        instance_id: t,
                        src: 42,
                        evid: 644,
                        tts: p,
                        pid: l ? l.pageId : null,
                        stage: c,
                        stageNum: u,
                        pn: o.getPageNumber(),
                      },
                      { endpoint: "ugc-viewer" }
                    );
                },
              };
            },
          })
        ),
        Z = (0, a.ff)(
          [(0, a.t6)(r.R9, c.u2), W.s, N.jj, (0, a.jt)(E.R1), (0, a.jt)(z.$)],
          ({ debug: e }, t, n, o, i) => ({
            getTpaHandlers() {
              return {
                applicationLoaded(
                  t,
                  a,
                  { appDefinitionId: r, tpaCompData: { widgetId: s } = {} }
                ) {
                  if (d.O.isRuntimeCompId(t))
                    return void (
                      e &&
                      console.warn(
                        `applicationLoaded is ignored in runtime component ${t}`
                      )
                    );
                  const l = n.getCurrentRouteInfo(),
                    p = Math.round(performance.now());
                  null == i ||
                    i.logger.log(
                      {
                        appId: r,
                        widget_id: s,
                        instance_id: t,
                        src: 42,
                        evid: 643,
                        tts: p,
                        pid: l ? l.pageId : null,
                        pn: o.getPageNumber(),
                      },
                      { endpoint: "ugc-viewer" }
                    );
                },
              };
            },
          })
        );
      var K = n(2811);
      const G = (0, a.ff)([K.n9, p.PV], (e, t) => ({
        getTpaHandlers() {
          return {
            async refreshCurrentMember() {
              const n = await e.getMemberDetails(!0);
              n && t.dispatch("MEMBER_DETAILS_UPDATED", () => n);
            },
          };
        },
      }));
      var Q = n(31191);
      const q = (0, a.ff)([i.jn, p.R3], ({ openPopup: e }, t) => {
          const n = (e) => {
            if (t.isModal(e)) {
              const e = new Error("An app can not open a popup from a modal.");
              return (e.name = "Operation not supported"), e;
            }
            return null;
          };
          return {
            getTpaHandlers() {
              return {
                openPopup: (0, A.u)(
                  ["site", "preview"],
                  (t, o, { originCompId: i }) => {
                    var { url: a } = o,
                      r = (0, Q._T)(o, ["url"]);
                    const s = n(t);
                    return s ? Promise.reject(s) : e(a, r, i);
                  }
                ),
                openPersistentPopup: (0, A.u)(
                  ["site", "preview"],
                  (t, o, { originCompId: i }) => {
                    var { url: a } = o,
                      r = (0, Q._T)(o, ["url"]);
                    const s = n(t);
                    return s
                      ? Promise.reject(s)
                      : e(
                          a,
                          Object.assign(Object.assign({}, r), {
                            persistent: !0,
                          }),
                          i
                        );
                  }
                ),
              };
            },
          };
        }),
        X = (0, a.ff)([x.Xb], (e) => ({
          getTpaHandlers() {
            return {
              getAppVendorProductId(t, { appDefinitionId: n }) {
                var o, i;
                const a =
                  null === (o = e.getAppInstanceByAppDefId(n)) || void 0 === o
                    ? void 0
                    : o.replace(/^[^.]+./, "");
                if (!a) return null;
                return (
                  (null === (i = JSON.parse(atob(a))) || void 0 === i
                    ? void 0
                    : i.vendorProductId) || null
                );
              },
            };
          },
        }));
      var J = n(8562);
      const Y = (e) => (C().isNumber(e) ? e : NaN),
        ee = (e) => C().parseInt((e || "").toString().split("px")[0]),
        te = (e) => {
          const t = { size: 0, unit: "" };
          return (
            C().isNumber(e)
              ? (t.size = e)
              : C().isString(e) &&
                ((t.unit = ((e) => {
                  const t = /(%)$/.exec(e);
                  return t && t[1] ? t[1] : "";
                })(e)),
                (t.size = ((e) => {
                  const t = /^([0-9]+)/.exec(e);
                  return t && t[1] ? parseInt(t[1], 10) : 0;
                })(e))),
            t
          );
        },
        ne = ({ width: e, height: t }, n) =>
          "100%" === t && ("100%" === e || Number(ee(e)) >= n.innerWidth),
        oe = (e, t, n) => {
          const o = (0, J.yF)(t) ? null : t.document.getElementById(n),
            i = o ? o.getBoundingClientRect() : null,
            a = ((e) => {
              let t = 0,
                n = 0;
              if (e && e.offsetParent) {
                let o = e;
                do {
                  (t += o.offsetLeft), (n += o.offsetTop);
                } while ((o = o.offsetParent));
              }
              return { top: n, left: t };
            })(o),
            r = {
              left: a.left,
              top: a.top,
              width: i ? Math.round(i.width) : 0,
              height: i ? Math.round(i.height) : 0,
              actualTop: i ? i.top : 0,
              actualLeft: i ? i.left : 0,
            },
            s = C().defaults(e.position, {
              x: 0,
              y: 0,
              origin: "FIXED",
              placement: "CENTER",
            }),
            l = C().pick(e, "height", "width"),
            p = {
              width: (0, J.yF)(t) ? 0 : t.innerWidth,
              height: (0, J.yF)(t) ? 0 : t.innerHeight,
            },
            c = {
              RELATIVE: () =>
                ((e, t, n, o) => {
                  const i = function (e, t, n) {
                      return e + t / 2 - n / 2;
                    },
                    a = function (e, t, n) {
                      return e - (t + n);
                    },
                    r = function (e, t, n) {
                      return e - (t + n);
                    },
                    s = function (e, t, n) {
                      return e + t / 2 - n / 2;
                    },
                    l = Y(o.height),
                    p = Y(o.width),
                    c = {
                      CENTER: () => ({
                        height: C().min([l, n.height]),
                        width: C().min([p, n.width]),
                        top: s(t.top, t.height, l),
                        left: i(t.left, t.width, p),
                      }),
                      TOP_LEFT: () => ({
                        height: C().min([l, t.top]),
                        width: C().min([p, t.left]),
                        top: t.top - l,
                        left: t.left - p,
                      }),
                      TOP_RIGHT: () => ({
                        height: C().min([l, t.top]),
                        width: C().min([p, r(n.width, t.width, t.left)]),
                        top: t.top - l,
                        left: t.width + t.left,
                      }),
                      TOP_CENTER: () => ({
                        height: C().min([l, t.top]),
                        width: C().min([p, n.width]),
                        top: t.top - l,
                        left: i(t.left, t.width, p),
                      }),
                      CENTER_RIGHT: () => ({
                        height: C().min([l, n.height]),
                        width: C().min([p, r(n.width, t.width, t.left)]),
                        top: s(t.top, t.height, l),
                        left: t.width + t.left,
                      }),
                      CENTER_LEFT: () => ({
                        height: C().min([l, n.height]),
                        width: C().min([p, t.left]),
                        top: s(t.top, t.height, l),
                        left: t.left - p,
                      }),
                      BOTTOM_LEFT: () => ({
                        height: C().min([l, a(n.height, t.top, t.height)]),
                        width: C().min([p, t.left]),
                        top: t.top + t.height,
                        left: t.left - p,
                      }),
                      BOTTOM_RIGHT: () => ({
                        height: C().min([l, a(n.height, t.top, t.height)]),
                        width: C().min([p, r(n.width, t.width, t.left)]),
                        top: t.top + t.height,
                        left: t.width + t.left,
                      }),
                      BOTTOM_CENTER: () => ({
                        height: C().min([l, a(n.height, t.top, t.height)]),
                        width: C().min([p, n.width]),
                        top: t.top + t.height,
                        left: i(t.left, t.width, p),
                      }),
                    }[e.placement](),
                    d = C().max([0, c.top]),
                    u = C().max([0, c.left]);
                  return Object.assign(
                    Object.assign(
                      Object.assign(
                        {},
                        {
                          position: "absolute",
                          display: "block",
                          width: 0,
                          height: 0,
                        }
                      ),
                      c
                    ),
                    { top: d, left: u }
                  );
                })(s, r, p, l),
              ABSOLUTE: () =>
                ((e, t, n, o) => {
                  const i = Y(o.height),
                    a = Y(o.width),
                    r = {
                      CENTER: () => {
                        const o = C().min([
                            t.actualTop + e.y,
                            n.height - (t.actualTop + e.y),
                          ]),
                          r = C().min([
                            t.actualLeft + e.x,
                            n.width - (t.actualLeft + e.x),
                          ]);
                        return {
                          height: C().min([i, 2 * o]),
                          width: C().min([a, 2 * r]),
                          top: t.top + e.y - i / 2,
                          left: t.left + e.x - a / 2,
                        };
                      },
                      TOP_LEFT: () => ({
                        height: C().min([i, t.actualTop + e.y]),
                        width: C().min([a, t.actualLeft + e.x]),
                        top: t.top + e.y - i,
                        left: t.left + e.x - a,
                      }),
                      TOP_RIGHT: () => ({
                        height: C().min([i, t.actualTop + e.y]),
                        width: C().min([a, n.width - (t.actualLeft + e.x)]),
                        top: t.top + e.y - i,
                        left: t.left + e.x,
                      }),
                      TOP_CENTER: () => {
                        const o = C().min([
                          t.actualLeft + e.x,
                          n.width - (t.actualLeft + e.x),
                        ]);
                        return {
                          height: C().min([i, t.actualTop + e.y]),
                          width: C().min([a, 2 * o]),
                          top: t.top + e.y - i,
                          left: t.left + e.x - a / 2,
                        };
                      },
                      CENTER_RIGHT: () => {
                        const o = C().min([
                          t.actualTop + e.y,
                          n.height - (t.actualTop + e.y),
                        ]);
                        return {
                          height: C().min([i, 2 * o]),
                          width: C().min([a, n.width - (t.actualLeft + e.x)]),
                          top: t.top + e.y - i / 2,
                          left: t.left + e.x,
                        };
                      },
                      CENTER_LEFT: () => {
                        const o = C().min([
                          t.actualTop + e.y,
                          n.height - (t.actualTop + e.y),
                        ]);
                        return {
                          height: C().min([i, 2 * o]),
                          width: C().min([a, t.actualLeft + e.x]),
                          top: t.top + e.y - i / 2,
                          left: t.left + e.x - a,
                        };
                      },
                      BOTTOM_LEFT: () => ({
                        height: C().min([i, n.height - e.y]),
                        width: C().min([a, t.actualLeft + e.x]),
                        top: t.top + e.y,
                        left: t.left + e.x - a,
                      }),
                      BOTTOM_RIGHT: () => ({
                        height: C().min([i, n.height - (t.actualTop + e.y)]),
                        width: C().min([a, n.width - (t.actualLeft + e.x)]),
                        top: t.top + e.y,
                        left: t.left + e.x,
                      }),
                      BOTTOM_CENTER: () => {
                        const o = C().min([
                          t.actualLeft + e.x,
                          n.width - (t.actualLeft + e.x),
                        ]);
                        return {
                          height: C().min([i, n.height - (t.actualTop + e.y)]),
                          width: C().min([a, 2 * o]),
                          top: t.top + e.y,
                          left: t.left + e.x - a / 2,
                        };
                      },
                    }[e.placement](),
                    s = C().max([0, r.top]),
                    l = C().max([0, r.left]);
                  return Object.assign(
                    Object.assign(
                      Object.assign(
                        {},
                        {
                          position: "absolute",
                          display: "block",
                          width: 0,
                          height: 0,
                        }
                      ),
                      r
                    ),
                    { top: s, left: l }
                  );
                })(s, r, p, l),
              FIXED: () =>
                ((e, t, n) => {
                  const o = {
                      position: "fixed",
                      display: "block",
                      width: n.width,
                      height: n.height,
                    },
                    i = te(n.height);
                  "%" === i.unit
                    ? (i.size = C().min([i.size, 100]))
                    : i.size > t.height && ((i.unit = "%"), (i.size = 100));
                  const a = te(n.width);
                  a.size =
                    "%" === a.unit
                      ? C().min([a.size, 100])
                      : C().min([a.size, t.width]);
                  const r = {
                    CENTER: () => ({
                      marginLeft: a.size / -2 + (a.unit || "px"),
                      marginTop:
                        "%" === i.unit ? 0 : i.size / -2 + (i.unit || "px"),
                      left: "50%",
                      top: "%" === i.unit ? 0 : "50%",
                    }),
                    TOP_LEFT: () => ({ left: "0px", top: "0px" }),
                    TOP_RIGHT: () => ({ right: "0px", top: "0px" }),
                    TOP_CENTER: () => ({
                      marginLeft: a.size / -2 + (a.unit || "px"),
                      top: "0px",
                      left: "50%",
                    }),
                    CENTER_RIGHT: () => ({
                      marginTop:
                        "%" === i.unit ? 0 : i.size / -2 + (i.unit || "px"),
                      top: "%" === i.unit ? 0 : "50%",
                      right: "0px",
                    }),
                    CENTER_LEFT: () => ({
                      marginTop:
                        "%" === i.unit ? 0 : i.size / -2 + (i.unit || "px"),
                      top: "%" === i.unit ? 0 : "50%",
                      left: "0px",
                    }),
                    BOTTOM_LEFT: () => ({ bottom: "0px", left: "0px" }),
                    BOTTOM_RIGHT: () => ({ bottom: "0px", right: "0px" }),
                    BOTTOM_CENTER: () => ({
                      marginLeft: a.size / -2 + (a.unit || "px"),
                      left: "50%",
                      bottom: "0px",
                    }),
                  };
                  return (
                    (o.width = a.size + (a.unit || "px")),
                    (o.height = i.size + (i.unit || "px")),
                    Object.assign(Object.assign({}, o), r[e.placement]())
                  );
                })(s, p, l),
            };
          return ((e, t, n) => {
            if (ee(e.width) < 10 || ee(e.height) < 10) {
              const e = te(n.height);
              e.size =
                "%" === e.unit
                  ? C().min([e.size, 100])
                  : C().min([e.size, t.height]);
              const o = te(n.width);
              return (
                (o.size =
                  "%" === o.unit
                    ? C().min([o.size, 100])
                    : C().min([o.size, t.height])),
                {
                  position: "fixed",
                  display: "block",
                  width: `${o.size}${o.unit || "px"}`,
                  height: `${e.size}${e.unit || "px"}`,
                  marginLeft: `${o.size / -2}${o.unit || "px"}`,
                  marginTop: `${e.size / -2}${e.unit || "px"}`,
                  left: "50%",
                  top: "50%",
                }
              );
            }
            return e;
          })(c[s.origin](), p, l);
        };
      var ie = n(87821);
      const ae = (0, a.ff)(
          [s.xP, l.ZQ, ie.x, (0, a.t6)(r.R9, c.u2), p.R3],
          (e, t, n, o, i) => {
            const a = (a, r) => {
              const { options: s, originCompId: l } = e.get(a),
                p = Object.assign(Object.assign({}, s), r),
                c = i.isModal(a)
                  ? ((e) =>
                      ["height", "width"].reduce((t, n) => {
                        const o = e[n];
                        if (!C().isNil(o)) {
                          const { unit: e, size: i } = te(o);
                          e || (t[n] = i);
                        }
                        return t;
                      }, {}))(r)
                  : oe(p, t, l);
              e.update({ [a]: { styleOverrides: c } }),
                n.setSiteScrollingBlocked(o.isMobileView && ne(c, t), a);
            };
            return {
              getTpaHandlers() {
                return {
                  async resizeWindow(t, n, { tpaCompData: o }) {
                    if (d.O.isRuntimeCompId(t)) a(t, n);
                    else if (null == o ? void 0 : o.isPinned) {
                      const o = {
                        width: C().isNumber(n.width) ? `${n.width}px` : n.width,
                        height: C().isNumber(n.height)
                          ? `${n.height}px`
                          : n.height,
                      };
                      C().isEqual(o, e.get(t).styleOverrides) ||
                        e.update({ [t]: { styleOverrides: o } });
                    }
                  },
                  heightChanged(t, n, { tpaCompData: o }) {
                    if (d.O.isRuntimeCompId(t)) a(t, { height: n.height });
                    else {
                      if (0 === n.height && !(null == o ? void 0 : o.isPinned))
                        return;
                      e.update({
                        [t]: {
                          heightOverride: n.height,
                          heightOverflow: Boolean(n.overflow),
                        },
                      });
                    }
                  },
                };
              },
            };
          }
        ),
        re = (0, a.ff)([], () => ({
          getTpaHandlers() {
            return {
              onReady() {
                return Promise.resolve();
              },
            };
          },
        }));
      var se = n(26064);
      class le extends Error {
        constructor(e) {
          super(e), (this.name = "HandlerError");
        }
      }
      const pe = (0, a.ff)(
          [
            (0, a.t6)(r.R9, c.u2),
            (0, a.t6)(r.$e, p.u2),
            (0, a.t6)(r.jC, p.u2),
            B.q,
            E.kc,
            c.B_,
            (0, a.jt)(O.rW),
            (0, a.jt)(D.HC),
            (0, a.jt)(se.M$),
            (0, a.jt)(w.d),
          ],
          (
            e,
            t,
            o,
            i,
            a,
            { getTpaSectionByAppDefinitionId: r },
            s,
            l,
            p,
            c
          ) => {
            const d = Object.entries(o.pagesData),
              u = ({ originCompId: n, sectionId: i, appDefinitionId: a }) => {
                const r = d.reduce(
                    (e, [t, n]) => (
                      e[n.tpaApplicationId] || (e[n.tpaApplicationId] = {}),
                      (e[n.tpaApplicationId][n.tpaPageId] = t),
                      e
                    ),
                    {}
                  ),
                  s = C()(o.pagesData)
                    .groupBy("tpaApplicationId")
                    .mapValues((e) => e.map((e) => e.id))
                    .value(),
                  l = a
                    ? ((p = a),
                      C().get(e.appsClientSpecMapData[p], ["applicationId"]))
                    : ((e) => {
                        if (!t.widgets[e])
                          throw new le("Component was not found.");
                        return t.widgets[e].applicationId;
                      })(n);
                var p;
                const c = e.appsClientSpecMapByApplicationId[l];
                if (!c) {
                  if (!a || C().isNil(l))
                    throw new le(
                      `Application with appDefinitionId "${a}" was not found on the site.`
                    );
                  throw new le("Component was not found.");
                }
                const u = s[l];
                if (!u || 0 === u.length)
                  throw new le(
                    `Page with app "${c.appDefinitionName}" was not found.`
                  );
                const g = i ? r[l][i] : null;
                if (i && !g)
                  throw new le(`App page with sectionId "${i}" was not found.`);
                return g || u[0];
              };
            return {
              getTpaHandlers() {
                return {
                  async navigateToSectionPage(
                    t,
                    g,
                    { originCompId: m, appDefinitionId: h }
                  ) {
                    var I;
                    const {
                        metaSiteId: y,
                        userFileDomainUrl: v,
                        routersConfig: w,
                        isMobileView: P,
                        isPremiumDomain: b,
                        experiments: T,
                      } = e,
                      E = (0, S.b)({
                        routingInfo: a.getLinkUtilsRoutingInfo(),
                        metaSiteId: y,
                        userFileDomainUrl: v,
                        routersConfig: w,
                        popupPages: null == s ? void 0 : s.getLightboxPages(),
                        multilingualInfo:
                          null == l ? void 0 : l.getMultilingualInfo(),
                        isMobileView: P,
                        isPremiumDomain: b,
                        experiments: T,
                      }),
                      {
                        sectionIdentifier: {
                          sectionId: O,
                          noTransition: D = !1,
                          appDefinitionId: M,
                          queryParams: R = {},
                          state: j,
                        } = {},
                        state: x,
                      } = g,
                      A = x || j;
                    let L = "";
                    try {
                      const t =
                        T[
                          "specs.thunderbolt.readAppDefIdInNavigateToSectionHandler"
                        ] &&
                        (({ appDefinitionId: t, sectionId: n }) => {
                          const i = d.reduce(
                              (e, [t, n]) => (
                                n.appDefinitionId &&
                                  (e[n.appDefinitionId] ||
                                    (e[n.appDefinitionId] = {}),
                                  (e[n.appDefinitionId][n.tpaPageId] = t)),
                                e
                              ),
                              {}
                            ),
                            a = C()(o.pagesData)
                              .filter((e) => !!e.appDefinitionId)
                              .groupBy("appDefinitionId")
                              .mapValues((e) => e.map((e) => e.id))
                              .value();
                          if (!e.appsClientSpecMapData[t]) return null;
                          const r = a[t];
                          if (!r || 0 === r.length) return null;
                          const s = n ? i[t][n] : null;
                          return n && !s ? null : s || r[0];
                        })({ appDefinitionId: M || h, sectionId: O });
                      L =
                        t ||
                        u({
                          originCompId: m,
                          sectionId: O,
                          appDefinitionId: M,
                        });
                    } catch (e) {
                      if (e instanceof le)
                        return { error: { message: e.message } };
                      throw e;
                    }
                    const k = { type: "TpaPageLink", pageId: L, path: A },
                      N =
                        (await (async (e) => {
                          var t, o;
                          const i = null == c ? void 0 : c.urlMappings;
                          if (i) {
                            const { buildCustomizedUrl: a } = await n
                                .e(862)
                                .then(n.bind(n, 47194)),
                              {
                                key: r,
                                variables: s,
                                options: l,
                              } = (null ===
                                (o =
                                  null ===
                                    (t =
                                      null == e
                                        ? void 0
                                        : e.sectionIdentifier) || void 0 === t
                                    ? void 0
                                    : t.customizeTarget) || void 0 === o
                                ? void 0
                                : o.customUrlData) || {};
                            if (r && s) return a(i, r, s, l);
                          }
                        })(g)) || E.getLinkUrlFromDataItem(k),
                      _ = `${N}${
                        C().isEmpty(R)
                          ? ""
                          : `?appSectionParams=${encodeURIComponent(
                              JSON.stringify(R)
                            )}`
                      }`,
                      H = E.getLinkProps(_);
                    D && p && p.disableNextTransition();
                    if (!(await i.navigateTo(H))) {
                      if (
                        (console.warn(
                          "You have invoked the navigateToSectionPage() API but you are already on the section page. Please use the pushState() API instead."
                        ),
                        !1 ===
                          (null === (I = g.sectionIdentifier) || void 0 === I
                            ? void 0
                            : I.shouldRefreshIframe))
                      )
                        return f.rV;
                      const e = r(M || h);
                      e && e.rebuildSrc();
                    }
                    return f.rV;
                  },
                };
              },
            };
          }
        ),
        ce = (0, a.ff)([l.ZQ, (0, a.t6)(r.$e, p.u2)], (e, t) => ({
          getTpaHandlers() {
            return {
              boundingRectAndOffsets(n) {
                const o = {
                    offsets: { x: 0, y: 0 },
                    rect: {
                      left: 0,
                      right: 0,
                      top: 0,
                      bottom: 0,
                      height: 0,
                      width: 0,
                    },
                    scale: t.siteScale,
                  },
                  i = e.document.getElementById(n);
                if (!i) return o;
                const a = (() => {
                    if (!t.isFixedHeader) return 0;
                    const n = e.document.getElementById("SITE_HEADER");
                    return (n && n.getBoundingClientRect().height) || 0;
                  })(),
                  r = i.getBoundingClientRect();
                return (
                  (o.offsets = {
                    x: r.left + e.scrollX,
                    y: r.top + e.scrollY - a,
                  }),
                  (o.rect = C()(r)
                    .pick(["left", "right", "top", "bottom", "height", "width"])
                    .mapValues((e) => Math.floor(e))
                    .value()),
                  (o.rect.top -= a),
                  o
                );
              },
            };
          },
        }));
      var de = n(21924);
      const ue = (0, a.ff)(
          [(0, a.t6)(r.$e, p.u2), de.QJ, l.EE],
          ({ widgets: e }, t, n) => ({
            getTpaHandlers() {
              return {
                setPageMetadata: (0, A.u)(
                  ["site"],
                  async (o, i, { originCompId: a }) => {
                    if (!e[a] || !e[a].isSection) {
                      const e =
                        "Setting a page meta data is possible only to TPA Sections and MultiSections";
                      return (
                        n.captureError(new Error(e), {
                          tags: { feature: "tpa" },
                        }),
                        { error: { message: e } }
                      );
                    }
                    return (
                      await t.setTPAOverrides(i), await t.renderSEO(), null
                    );
                  }
                ),
              };
            },
          })
        ),
        ge = (0, a.ff)([p.R3], (e) => ({
          getTpaHandlers() {
            return {
              openModal: (0, A.u)(
                ["site", "preview"],
                (t, { url: n, theme: o, height: i, width: a }) =>
                  e.openModal(n, { width: a, height: i, theme: o }, t)
              ),
            };
          },
        })),
        fe = (0, a.ff)(
          [
            (0, a.t6)(r.R9, c.u2),
            B.q,
            E.kc,
            s.QZ,
            (0, a.jt)(O.rW),
            (0, a.jt)(D.HC),
            (0, a.jt)(se.M$),
          ],
          (e, t, n, o, i, a, r) => {
            const s = (t) => {
                const {
                    metaSiteId: o,
                    userFileDomainUrl: r,
                    routersConfig: s,
                    isMobileView: l,
                    isPremiumDomain: p,
                    experiments: c,
                  } = e,
                  d = (0, S.b)({
                    routingInfo: n.getLinkUtilsRoutingInfo(),
                    metaSiteId: o,
                    userFileDomainUrl: r,
                    routersConfig: s,
                    popupPages: null == i ? void 0 : i.getLightboxPages(),
                    multilingualInfo:
                      null == a ? void 0 : a.getMultilingualInfo(),
                    isMobileView: l,
                    isPremiumDomain: p,
                    experiments: c,
                  }),
                  u = d.getLinkUrlFromDataItem(t);
                return d.getLinkProps(u);
              },
              l = ({ pageId: e, anchorId: o, noTransition: i }) => {
                const a = (({ pageId: e, anchorId: t }) => {
                  const o = s({ type: "PageLink", pageId: e, target: "_self" });
                  return (
                    t &&
                      (n.getLinkUtilsRoutingInfo().pageId === e
                        ? (o.anchorCompId = t)
                        : (o.anchorDataId = t)),
                    o
                  );
                })({ pageId: e, anchorId: o });
                return i && r && r.disableNextTransition(), t.navigateTo(a);
              };
            return {
              getTpaHandlers() {
                return {
                  navigateToPage(
                    e,
                    { pageId: t, anchorId: n, noTransition: o }
                  ) {
                    l({ pageId: t, anchorId: n, noTransition: o });
                  },
                  navigateTo(e, { link: n }) {
                    if (n.type === f.RZ.EXTERNAL_LINK) return;
                    const o = s(n);
                    t.navigateTo(o);
                  },
                  async navigateToAnchor(e, { anchorId: t }) {
                    if (
                      !(await l({
                        pageId: n.getLinkUtilsRoutingInfo().pageId,
                        anchorId: t,
                      }))
                    )
                      throw new Error(
                        `anchor with id "${t}" was not found on the current page.`
                      );
                    return f.rV;
                  },
                  async navigateToComponent(
                    e,
                    { compId: t, pageId: o, noPageTransition: i }
                  ) {
                    const a = o || n.getLinkUtilsRoutingInfo().pageId;
                    if (!(await l({ pageId: a, anchorId: t, noTransition: i })))
                      throw new Error(
                        `Page id "${a}" does not contain the component id "${t}".`
                      );
                    return f.rV;
                  },
                };
              },
            };
          }
        ),
        me = (0, a.ff)(
          [(0, a.t6)(r.R9, c.u2)],
          ({ appsClientSpecMapData: e }) => ({
            getTpaHandlers() {
              return {
                getApplicationFields(t, { appDefinitionId: n }) {
                  return e[n].appFields;
                },
              };
            },
          })
        );
      var he = n(21568),
        Ie = n(12073);
      const ye = (0, a.ff)([he.H, p.PV], (e, t) => ({
          getTpaHandlers() {
            return {
              removeEventListener(n, { eventKey: o }, { appDefinitionId: i }) {
                o.startsWith(Ie.$E)
                  ? e.unsubscribe(i, n, o)
                  : t.unregister(o, n);
              },
            };
          },
        })),
        ve = (0, a.ff)([he.H], (e) => ({
          getTpaHandlers() {
            return {
              publish(t, n, { appDefinitionId: o }) {
                e.publish(o, t, n);
              },
            };
          },
        })),
        we = (0, a.ff)([x.Xb, p.PV], (e, t) => ({
          getTpaHandlers() {
            return {
              async revalidateSession(n, o, { appDefinitionId: i }) {
                await e.loadNewSession();
                const a = { instance: e.getAppInstanceByAppDefId(i) };
                return (
                  t.dispatch("INSTANCE_CHANGED", () => a, {
                    appDefinitionId: i,
                  }),
                  a
                );
              },
            };
          },
        }));
      var Pe = n(24548),
        be = n(46466);
      const Te = (0, a.ff)(
          [
            (0, a.t6)(r.jC, p.u2),
            (0, a.t6)(r.$e, p.u2),
            p.KE,
            be.p,
            s.xP,
            Pe.i,
          ],
          (e, { widgets: t }, n, o, i, { getFontsConfig: a }) => ({
            getTpaHandlers() {
              return {
                appIsAlive(r, s, { originCompId: l }) {
                  const {
                    siteColors: p,
                    isVisualFocusEnabled: c,
                    siteTextPresets: d,
                  } = e;
                  i.update({ [r]: { sentAppIsAlive: !0 } }),
                    n.reportTpaLoadEnd(r);
                  const u = t[l] || {
                    style: {
                      colors: {},
                      numbers: {},
                      booleans: {},
                      fonts: {},
                      googleFontsCssUrl: "",
                      uploadFontFaces: "",
                    },
                  };
                  return Object.assign(
                    {
                      fonts: a(),
                      commonConfig: o.getCommonConfig(),
                      isVisualFocusEnabled: c,
                      siteColors: p,
                      siteTextPresets: d,
                    },
                    u
                  );
                },
              };
            },
          })
        ),
        Ce = (0, a.ff)([p.PV, he.H], (e, t) => ({
          getTpaHandlers() {
            return {
              registerEventListener(
                n,
                { eventKey: o, receivePastEvents: i = !1 },
                {
                  callId: a,
                  tpa: r,
                  tpaCompData: { widgetId: s = "" } = {},
                  appDefinitionId: l,
                }
              ) {
                if (o.startsWith(Ie.$E))
                  t.handleIframeSubscribe(l, n, {
                    eventKey: o,
                    isPersistent: i,
                    callId: a,
                  });
                else {
                  const t = (e, t) => {
                    r.postMessage(
                      JSON.stringify({
                        intent: "addEventListener",
                        eventType: e,
                        params: t,
                      }),
                      "*"
                    );
                  };
                  e.register(o, n, t, { widgetId: s, appDefinitionId: l });
                }
              },
            };
          },
        })),
        Se = (0, a.ff)([p.R3, i.jn], (e, t) => ({
          getTpaHandlers() {
            return {
              closeWindow: (n, o) =>
                y({ tpaModal: e, tpaPopup: t, compId: n, onCloseMessage: o }),
            };
          },
        })),
        Ee = (0, a.ff)([N.jj], (e) => ({
          getTpaHandlers() {
            return {
              getCurrentPageId() {
                return e.getCurrentRouteInfo().pageId;
              },
            };
          },
        }));
      var Oe = n(11717);
      const De = (0, a.ff)([l.ZQ, (0, a.jt)(Oe.FK)], (e, t) => ({
          getTpaHandlers() {
            return {
              async scrollTo(n, { x: o, y: i, scrollAnimation: a }) {
                if (t)
                  if (a) {
                    const n = 1,
                      a = 0;
                    (await t.getInstance()).runAnimationOnElements(
                      "BaseScroll",
                      [e],
                      n,
                      a,
                      {
                        y: i,
                        x: o,
                        callbacks: { onComplete: () => Promise.resolve() },
                      }
                    );
                  } else e.scrollTo(o, i);
              },
            };
          },
        })),
        Me = (0, a.ff)([l.ZQ], (e) => ({
          getTpaHandlers() {
            return {
              scrollBy(t, { x: n, y: o }) {
                e.scrollBy(n, o);
              },
            };
          },
        })),
        Re = (0, a.ff)([(0, a.t6)(r.$e, p.u2)], ({ widgets: e }) => ({
          getTpaHandlers() {
            return {
              getExternalId(t, n, { originCompId: o }) {
                return Promise.resolve(e[o].externalId);
              },
            };
          },
        })),
        je = (0, a.ff)([(0, a.t6)(r.$e, p.u2)], (e) => ({
          getTpaHandlers() {
            return {
              getValue(t, { key: n, scope: o }, { originCompId: i }) {
                const { widgets: a, appPublicData: r } = e,
                  s = a[i].applicationId,
                  l = "APP" === o ? r[s] : a[i].componentPublicData;
                return l && l[n]
                  ? { [n]: l[n] }
                  : { error: { message: `key ${n} not found in ${o} scope` } };
              },
            };
          },
        })),
        xe = (0, a.ff)([(0, a.t6)(r.$e, p.u2)], (e) => ({
          getTpaHandlers() {
            function t(t) {
              const { widgets: n, appPublicData: o } = e;
              return {
                APP: o[n[t].applicationId],
                COMPONENT: n[t].componentPublicData,
              };
            }
            return {
              getPublicData(e, n, { originCompId: o }) {
                return t(o);
              },
              getValues(e, n, { originCompId: o }) {
                const { scope: i, keys: a } = n,
                  r = t(o);
                return C().pickBy(r[i], (e, t) => a.includes(t));
              },
            };
          },
        })),
        Ae = (0, a.ff)([(0, a.t6)(r.$e, p.u2)], (e) => ({
          getTpaHandlers() {
            return {
              getStyleId(t, n, { originCompId: o }) {
                return e.widgets[o].styleId;
              },
            };
          },
        })),
        Le = (0, a.ff)([(0, a.t6)(r.R9, c.u2)], (e) => ({
          getTpaHandlers() {
            return {
              getViewMode() {
                return { editMode: e.viewMode };
              },
            };
          },
        })),
        ke = (0, a.ff)(
          [(0, a.t6)(r.R9, c.u2), (0, a.t6)(r.$e, p.u2)],
          ({ widgetsClientSpecMapData: e }, { pageId: t }) => ({
            getTpaHandlers() {
              return {
                getComponentInfo(
                  n,
                  o,
                  { tpaCompData: { widgetId: i = "" } = {} }
                ) {
                  var a, r, s;
                  const l = "masterPage" === t;
                  return {
                    compId: n,
                    showOnAllPages: l,
                    pageId: l ? "" : t,
                    tpaWidgetId:
                      null === (a = e[i]) || void 0 === a
                        ? void 0
                        : a.tpaWidgetId,
                    appPageId:
                      (null ===
                        (s =
                          null === (r = e[i]) || void 0 === r
                            ? void 0
                            : r.appPage) || void 0 === s
                        ? void 0
                        : s.id) || "",
                  };
                },
              };
            },
          })
        );
      var Ne = n(82627);
      const _e = (0, a.ff)(
          [
            (0, a.t6)(r.$e, p.u2),
            (0, a.t6)(r.jC, p.u2),
            (0, a.t6)(r.R9, c.u2),
            Ne.O,
          ],
          (
            { widgets: e },
            { pagesData: t },
            { widgetsClientSpecMapData: n },
            o
          ) => ({
            getTpaHandlers() {
              return {
                isAppSectionInstalled(
                  i,
                  { sectionId: a, appDefinitionId: r },
                  { originCompId: s }
                ) {
                  const l = {
                    sectionId: a,
                    originCompId: s,
                    appDefinitionId: r,
                  };
                  return (
                    (({
                      sectionId: n,
                      originCompId: i,
                      appDefinitionId: a,
                    }) => {
                      var r;
                      if (o["specs.thunderbolt.readAppDefIdFromPageData"]) {
                        const o =
                            a ||
                            (null === (r = e[i]) || void 0 === r
                              ? void 0
                              : r.appDefinitionId),
                          s = C().filter(t, { appDefinitionId: o });
                        return C().some(s, { tpaPageId: n });
                      }
                      return !1;
                    })(l) ||
                    (({
                      sectionId: o,
                      originCompId: i,
                      appDefinitionId: a,
                    }) => {
                      var r;
                      let s =
                        null === (r = e[i]) || void 0 === r
                          ? void 0
                          : r.applicationId;
                      if (a) {
                        const e = C().find(n, { appDefinitionId: a });
                        s = (null == e ? void 0 : e.applicationId) || s;
                      }
                      const l = C().filter(t, { tpaApplicationId: Number(s) });
                      return C().some(l, { tpaPageId: o });
                    })(l)
                  );
                },
              };
            },
          })
        ),
        He = (0, a.ff)([p.Cc], ({ getSiteMap: e }) => ({
          getTpaHandlers() {
            return {
              async getSitePages(t, { includePagesUrl: n }) {
                return (await e()).map((e) =>
                  Object.assign(
                    {
                      hide: e.hidden,
                      id: C().isString(e.pageId) && e.pageId.replace("#", ""),
                      isHomepage: e.isHomePage || !1,
                      title: e.title,
                    },
                    n && { url: e.url }
                  )
                );
              },
              getSiteMap: e,
            };
          },
        })),
        Ue = (0, a.ff)(
          [E.Iz, N.jj, (0, a.t6)(r.jC, p.u2), (0, a.t6)(r.R9, c.u2), l.ZQ],
          (e, t, { pagesData: n }, { externalBaseUrl: o }, i) => ({
            getTpaHandlers() {
              return {
                siteInfo() {
                  const { pageId: a } = t.getCurrentRouteInfo(),
                    { href: r } = e.getParsedUrl(),
                    { siteDescription: s, siteKeywords: l, title: p } = n[a];
                  return {
                    siteDescription: s,
                    siteKeywords: l,
                    baseUrl: o,
                    pageTitle: i.document.title,
                    pageTitleOnly: p,
                    referer: i.document.referrer,
                    url: r,
                  };
                },
              };
            },
          })
        ),
        Be = (0, a.ff)(
          [(0, a.t6)(r.R9, c.u2), (0, a.t6)(r.jC, p.u2)],
          ({ externalBaseUrl: e, pageIdToPrefix: t }, { pagesData: n }) => ({
            getTpaHandlers() {
              return {
                getSectionUrl(
                  o,
                  { sectionIdentifier: i },
                  { appClientSpecMapData: a }
                ) {
                  const r = C().find(n, { tpaPageId: i });
                  if (null == r ? void 0 : r.id) {
                    const n = t[r.id],
                      o = n ? `${n}/${r.pageUriSEO}` : r.pageUriSEO;
                    return { url: `${e}/${o}` };
                  }
                  return {
                    error: {
                      message: `Page with app "${
                        null == a ? void 0 : a.appDefinitionName
                      }" was not found.`,
                    },
                  };
                },
              };
            },
          })
        ),
        Fe = (0, a.ff)([p.u5], (e) => ({
          getTpaHandlers() {
            return {
              async setFullScreenMobile(t, { isFullScreen: n }) {
                e.setFullScreenMobile(t, n);
              },
            };
          },
        })),
        $e = () => {},
        We = (0, a.ff)([], () => ({
          getTpaHandlers() {
            return {
              getSiteRevision: $e,
              getDeviceType: $e,
              toWixDate: $e,
              getCompId: $e,
              getOrigCompId: $e,
              getWidth: $e,
              isInModal: $e,
              getLocale: $e,
              getCacheKiller: $e,
              getTarget: $e,
              getInstanceId: $e,
              getSignDate: $e,
              getUid: $e,
              getPermissions: $e,
              getIpAndPort: $e,
              getDemoMode: $e,
              getInstanceValue: $e,
              getSiteOwnerId: $e,
              getImageUrl: $e,
              getResizedImageUrl: $e,
              getAudioUrl: $e,
              getDocumentUrl: $e,
              getSwfUrl: $e,
              getPreviewSecureMusicUrl: $e,
              getStyleParams: $e,
              getStyleColorByKey: $e,
              getColorByreference: $e,
              getSiteTextPresets: $e,
              getFontsSpriteUrl: $e,
              getStyleFontByKey: $e,
              getStyleFontByReference: $e,
              getSiteColors: $e,
              getViewModeInternal: $e,
              postMessage: $e,
              getEditorFonts: $e,
              setUILIBParamValue: $e,
              removeAppMetadata: $e,
              setAppMetadata: $e,
              setColorParam: $e,
              setStyleParam: $e,
              resizeComponent: $e,
              setValue: $e,
              isSupported: $e,
              appEngaged: $e,
              getInstalledInstance: $e,
              isApplicationInstalled: $e,
              isCustomApplicationPermissionsGranted: $e,
              isGroupApplicationPermissionsGranted: $e,
              setFullWidth: $e,
            };
          },
        }));
      var ze = n(42473);
      const Ve = (0, a.ff)([(0, a.jt)(ze.I)], (e) => ({
          getTpaHandlers() {
            return { reportVisitorActivity: e ? e.reportActivity : () => {} };
          },
        })),
        Ze = (0, a.ff)([s.QZ, s.xP], (e, t) => ({
          getTpaHandlers() {
            return {
              getCurrentPageAnchors() {
                return C()(e.getEntireStore())
                  .pickBy(({ componentType: e }) => "Anchor" === e)
                  .mapValues((e, n) => ({ id: n, title: t.get(n).name }))
                  .values()
                  .sortBy(({ id: e }) => {
                    switch (e) {
                      case "SCROLL_TO_TOP":
                        return 0;
                      case "SCROLL_TO_BOTTOM":
                        return 1;
                      default:
                        return 2;
                    }
                  })
                  .value();
              },
            };
          },
        }));
      var Ke = n(19095);
      const Ge = (e, t, n) => ({
          error: { errorCode: e, message: t, error: n },
        }),
        Qe = "BAD_REQUEST_ERROR",
        qe = "WIX_ERROR",
        Xe =
          (e) =>
          (...t) =>
            window.ApplePaySession
              ? "function" == typeof e
                ? e(...t)
                : void 0
              : { error: { errorCode: "APPLE_PAY_IS_NOT_AVAILABLE_ERROR" } },
        Je = (0, a.ff)([l.Zr], ({ siteAssets: e }) => ({
          getTpaHandlers() {
            return {
              applePayInvokeMethod: Xe(async (e, t) => {
                if (!t.methodName) return Ge(Qe);
                switch (t.methodName) {
                  case "canMakePayments":
                    try {
                      return {
                        result: window.ApplePaySession.canMakePayments(),
                      };
                    } catch (e) {
                      return Ge(
                        qe,
                        "ApplePaySession.canMakePayments() failed",
                        e
                      );
                    }
                  case "supportsVersion":
                    try {
                      return {
                        result: window.ApplePaySession.supportsVersion(
                          t.payload.version
                        ),
                      };
                    } catch (e) {
                      return Ge(
                        qe,
                        `ApplePaySession.supportsVersion(${t.payload.version}) failed`,
                        e
                      );
                    }
                  default:
                    return Ge(Qe);
                }
              }),
              applePayStartSession: Xe(
                async (
                  t,
                  { paymentRequest: n, applePayVersion: o, callbackApiId: i },
                  a
                ) => {
                  try {
                    const t = new window.ApplePaySession(o, n),
                      r = await (0, Ke.FR)(e.clientTopology.moduleRepoUrl),
                      s = window.document.querySelector(
                        `#${a.originCompId} > iframe`
                      );
                    if (!s)
                      return Ge(
                        qe,
                        `Can not find a TPA iframe with id: ${a.originCompId}`
                      );
                    const l = await r.api.request(i, { target: s });
                    (t.onvalidatemerchant = async (e) => {
                      const n = await l.onValidateMerchant({
                        validationURL: e.validationURL,
                      });
                      return t.completeMerchantValidation(n);
                    }),
                      (t.onshippingcontactselected = async (e) => {
                        const n = await l.onShippingContactSelected({
                          shippingContact: e.shippingContact,
                        });
                        return (
                          Array.isArray(n.errors) &&
                            (n.errors = n.errors.map((e) => {
                              return (
                                (t = e),
                                new window.ApplePayError(
                                  t.code,
                                  t.contactField,
                                  t.message
                                )
                              );
                              var t;
                            })),
                          t.completeShippingContactSelection(n)
                        );
                      }),
                      (t.onshippingmethodselected = async (e) => {
                        const n = await l.onShippingMethodSelected({
                          shippingMethod: e.shippingMethod,
                        });
                        return t.completeShippingMethodSelection(n);
                      }),
                      (t.onpaymentauthorized = async (e) => {
                        const n = await l.onPaymentAuthorized({
                          payment: e.payment,
                        });
                        return t.completePayment(n);
                      }),
                      (t.oncancel = async () => await l.onCancel());
                    const { canceled: p } = await l.onClick();
                    if (p) return;
                    t.begin();
                  } catch (e) {
                    return Ge(qe, null == e ? void 0 : e.message, e);
                  }
                }
              ),
            };
          },
        })),
        Ye = [
          We,
          Te,
          Ce,
          Se,
          Ee,
          De,
          Me,
          Re,
          je,
          xe,
          ue,
          we,
          Le,
          Ae,
          ke,
          _e,
          Ue,
          ve,
          ye,
          He,
          (0, a.ff)([N.jj], (e) => ({
            getTpaHandlers() {
              return {
                getRouterPublicData() {
                  var t, n, o;
                  return null !==
                    (o =
                      null ===
                        (n =
                          null === (t = e.getCurrentRouteInfo()) || void 0 === t
                            ? void 0
                            : t.dynamicRouteData) || void 0 === n
                        ? void 0
                        : n.publicData) && void 0 !== o
                    ? o
                    : {};
                },
              };
            },
          })),
          me,
          ge,
          fe,
          G,
          Be,
          ce,
          X,
          ae,
          re,
          pe,
          q,
          Fe,
          Ve,
          $,
          Z,
          V,
          H,
          k,
          _,
          R,
          L,
          M,
          Ze,
          b,
          P,
          v,
          Je,
        ],
        et = {
          STATE_CHANGED: "STATE_CHANGED",
          INSTANCE_CHANGED: "INSTANCE_CHANGED",
          PAGE_NAVIGATION: "PAGE_NAVIGATION",
          MEMBER_DETAILS_UPDATED: "MEMBER_DETAILS_UPDATED",
          CONSENT_POLICY_UPDATE: "CONSENT_POLICY_UPDATE",
          SCROLL: "SCROLL",
          QUICK_ACTION_TRIGGERED: "QUICK_ACTION_TRIGGERED",
          COMMON_CONFIG_UPDATE: "COMMON_CONFIG_UPDATE",
        },
        tt = (0, a.ff)(
          [(0, a.t6)(r.Wf, p.u2), (0, a.t6)(r.$e, p.u2), x.Xb],
          (e, t, n) => {
            const o = (t, n, o = () => !0) => {
              C().forEach(e.get().registry[t], (e, i) => {
                if (!e) return;
                const { listener: a } = e,
                  r = (0, Q._T)(e, ["listener"]),
                  s =
                    ((l = o),
                    C().isFunction(l)
                      ? l
                      : (e) => {
                          const [t] = Object.keys(l);
                          return e[t] === l[t];
                        });
                var l;
                const p = Object.assign({ compId: i }, r);
                s(p) && a(t, n(p));
              });
            };
            return (
              ((e) => {
                e.update((e) => C().merge({}, e, { registry: {} }));
              })(e),
              {
                pageDidMount() {
                  return n.addLoadNewSessionCallback(
                    ({ results: { instances: e }, reason: t }) => {
                      "expiry" === t &&
                        o("INSTANCE_CHANGED", ({ appDefinitionId: t }) => ({
                          instance: e[t],
                        }));
                    }
                  );
                },
                register(n, o, i, a) {
                  ((e) => e in et)(n) &&
                    e.update((e) =>
                      C().merge({}, e, {
                        registry: {
                          [n]: {
                            [o]: Object.assign(Object.assign({}, a), {
                              pageId: t.pageId,
                              listener: i,
                            }),
                          },
                        },
                      })
                    );
                },
                unregister(t, n) {
                  e.update((e) => C().set(e, ["registry", t, n], null));
                },
                dispatch: o,
              }
            );
          }
        );
      var nt = n(44263);
      const ot = (0, a.ff)([p.TJ, x.Xb, l.ZQ], (e, t, n) => {
        const { resolver: o, promise: i } = (0, nt.w)();
        return Object.assign(Object.assign({}, e), {
          pageDidMount() {
            o();
            const n = t.addLoadNewSessionCallback(e.refreshAllPopups);
            return () => {
              n(), e.closeNonPersistentPopups();
            };
          },
          async openPopup(...t) {
            if (!(0, J.yF)(n)) return await i, e.openPopup(...t);
          },
        });
      });
      var it = n(98118);
      const at = (0, a.ff)(
          [
            s.xP,
            s.QZ,
            (0, a.t6)(r.Wf, p.u2),
            (0, a.t6)(r.R9, c.u2),
            (0, a.t6)(r.jC, p.u2),
            (0, a.t6)(r.$e, p.u2),
            x.Xb,
            l.ZQ,
            ie.x,
            it.ku,
            c.RN,
            c.ex,
            he.H,
          ],
          (e, t, n, o, i, a, r, s, l, p, c, u, g) => {
            const f = {},
              m = (e) => {
                n.update((t) => {
                  var n;
                  return Object.assign(Object.assign({}, t), {
                    tpaPopup: {
                      persistentPopups: e,
                      popups:
                        (null === (n = null == t ? void 0 : t.tpaPopup) ||
                        void 0 === n
                          ? void 0
                          : n.popups) || {},
                    },
                  });
                });
              },
              h = (e) => {
                n.update((t) => {
                  var n;
                  return Object.assign(Object.assign({}, t), {
                    tpaPopup: {
                      popups: e,
                      persistentPopups:
                        (null === (n = null == t ? void 0 : t.tpaPopup) ||
                        void 0 === n
                          ? void 0
                          : n.persistentPopups) || {},
                    },
                  });
                });
              },
              I = () => C().get(n.get(), ["tpaPopup", "popups"], {}),
              y = () => C().get(n.get(), ["tpaPopup", "persistentPopups"], {}),
              v = new RegExp(d.O.buildRuntimeCompId("tpapopup-[0-9]+", ".+"));
            return {
              isPopup(e) {
                return v.test(e);
              },
              refreshAllPopups: () => {
                Object.values(y()).forEach(({ refreshPopUp: e }) => e()),
                  Object.values(f).forEach(({ refreshPopUp: e }) => e());
              },
              closeNonPersistentPopups: () =>
                Object.values(f).forEach(({ closePopup: e }) => {
                  e();
                }),
              openPopup(n, r, v) {
                const {
                    isMobileView: w,
                    isMobileDevice: P,
                    previewMode: b,
                    viewMode: T,
                  } = o,
                  { masterPageTpaComps: S } = i,
                  { widgets: E, pageId: O } = a;
                return new Promise(async (o) => {
                  const i = d.O.buildRuntimeCompId(
                      `tpapopup-${Date.now()}`,
                      d.O.getOriginCompId(v)
                    ),
                    a = (v && t.getContextIdOfCompId(v)) || p;
                  u.registerTpasForContext({ contextId: a, pageId: O }, [i]);
                  const D = (e) => {
                      if (r.persistent) {
                        const e = y();
                        delete e[i], m(e);
                      } else delete f[i], h(C().omit(I(), i));
                      t.removeComponentFromDynamicStructure(i),
                        l.setSiteScrollingBlocked(!1, i),
                        r.persistent || g.clearListenersByCompId(i),
                        o(e);
                    },
                    M = (e) => /^0(?:px|%)?$/.test(`${e}`),
                    R =
                      P && b && !M(r.width) && !M(r.height)
                        ? {
                            position: "fixed",
                            width: "319px",
                            height: "512px",
                            marginLeft: 0,
                            marginTop: 0,
                            boxShadow: "none",
                            left: "50%",
                            transform: "translateX(-50%)",
                            top: 0,
                          }
                        : {},
                    j = Object.assign(Object.assign({}, oe(r, s, v)), R),
                    x = () => {
                      const e = E[v] || S[v];
                      return c.buildSrc(i, O, e, n, {
                        extraQueryParams: {
                          isInPopup: "true",
                          origCompId: v,
                          viewMode: T,
                        },
                      });
                    },
                    A = {
                      options: r,
                      originCompId: v,
                      src: x(),
                      styleOverrides: j,
                      isBareTheme: "BARE" === r.theme,
                      closePopup: D,
                    };
                  e.update({ [i]: A }),
                    l.setSiteScrollingBlocked(w && ne(j, s), i),
                    await t.addComponentToDynamicStructure(i, {
                      components: [],
                      componentType: "TPAPopup",
                    });
                  const L = {
                    isPersistent: r.persistent,
                    closePopup: D,
                    refreshPopUp: () => {
                      (E[v] || S[v]) && e.update({ [i]: { src: x() } });
                    },
                  };
                  L.isPersistent
                    ? m(Object.assign(Object.assign({}, y()), { [i]: L }))
                    : ((f[i] = L),
                      h(Object.assign(Object.assign({}, I()), { [i]: L })));
                });
              },
              closePopup(e, t) {
                const n = y()[e] || I()[e];
                n && n.closePopup(t);
              },
              getOpenedPopups() {
                return Object.assign(Object.assign({}, y()), f);
              },
            };
          }
        ),
        rt = (0, a.ff)([c.I5], (e) => ({
          getTpaHandlers() {
            return {
              waitForWixCodeWorkerToBeReady: async () => (
                await e.waitForPublicApiReady(), {}
              ),
            };
          },
        }));
      var st = n(86681);
      const lt = (e, t) => {
          if ((0, J.yF)(e)) return;
          const n = document.getElementById("site-root");
          n &&
            (t
              ? (n.style.setProperty("overflow-y", "hidden"),
                n.style.setProperty("height", "0"))
              : (n.style.removeProperty("overflow-y"),
                n.style.removeProperty("height")));
        },
        pt = "tpaModal",
        ct = (0, a.ff)(
          [
            (0, a.t6)(r.R9, c.u2),
            (0, a.t6)(r.jC, p.u2),
            (0, a.t6)(r.$e, p.u2),
            (0, a.t6)(r.Wf, p.u2),
            s.xP,
            l.ZQ,
            ie.x,
            s.QZ,
            x.Xb,
            it.ku,
            c.RN,
            c.ex,
            N.jj,
            st.a,
            (0, a.jt)(O.rW),
          ],
          (
            e,
            { masterPageTpaComps: t },
            n,
            o,
            i,
            a,
            r,
            s,
            l,
            p,
            c,
            u,
            g,
            f,
            m
          ) => {
            let h = () => {};
            const I = (e) => {
                o.update((t) =>
                  Object.assign(Object.assign({}, t), {
                    tpaModal: Object.assign(
                      Object.assign(
                        {},
                        (null == t ? void 0 : t.tpaModal) || {}
                      ),
                      { closeModalImpl: e }
                    ),
                  })
                );
              },
              y = (e) => {
                o.update((t) =>
                  Object.assign(Object.assign({}, t), {
                    tpaModal: Object.assign(
                      Object.assign(
                        {},
                        (null == t ? void 0 : t.tpaModal) || {}
                      ),
                      { currentModalId: e }
                    ),
                  })
                );
              },
              v = () =>
                C().get(o.get(), ["tpaModal", "closeModalImpl"], () => {}),
              w = (e, t, n) => {
                const o = { width: a.innerWidth, height: a.innerHeight };
                if (
                  ((e = Math.min(e, o.width)), (t = Math.min(t, o.height)), !n)
                ) {
                  const n = o.width - 50,
                    i = o.height - 50;
                  e >= n && t >= i && ((e = n), (t = i));
                }
                return { width: e, height: t };
              },
              { resolver: P, promise: b } = (0, nt.w)();
            return {
              pageDidMount() {
                P();
              },
              pageWillUnmount() {
                v()();
              },
              isModal(e) {
                return e.startsWith(pt);
              },
              openModal(o, { width: l, height: P, title: T, theme: C }, S) {
                if ((0, J.yF)(a)) return new Promise(() => {});
                let E;
                const {
                    tpaModalConfig: O,
                    isMobileDevice: D,
                    previewMode: M,
                    viewMode: R,
                  } = e,
                  { pageId: j, widgets: x } = n,
                  { wixTPAs: A } = O,
                  L = d.O.buildRuntimeCompId(pt, d.O.getOriginCompId(S || j)),
                  k = (S && s.getContextIdOfCompId(S)) || p;
                u.registerTpasForContext({ contextId: k, pageId: j }, [L]),
                  v()(),
                  f.enableCyclicTabbing(L);
                const N = S ? i.get(S) : null,
                  _ = A[N ? N.applicationId : null],
                  H = () => {
                    const e = w(l, P, _);
                    i.update({ [L]: { width: e.width, height: e.height } });
                  };
                return (
                  a.addEventListener("resize", H),
                  D && r.setSiteScrollingBlocked(!0, L),
                  new Promise(async (n) => {
                    var d;
                    await b;
                    const u =
                        null == m ? void 0 : m.getCurrentOrPendingLightboxId(),
                      O =
                        null === (d = g.getCurrentRouteInfo()) || void 0 === d
                          ? void 0
                          : d.contextId;
                    if (p !== O && "masterPage" !== p && p !== u)
                      return void (
                        e.debug &&
                        console.warn(
                          `Tried to open modal but the current context ID: ${O} doesn't equal the modal context ID: ${p}`
                        )
                      );
                    y(L),
                      I((e) => {
                        I(() => {}),
                          a.removeEventListener("resize", H),
                          f.disableCyclicTabbing(L),
                          h(),
                          D && (r.setSiteScrollingBlocked(!1, L), lt(a, !1)),
                          s.removeComponentFromDynamicStructure(L),
                          i.update({
                            [L]: { src: null, closeModal: () => {} },
                          }),
                          null == E || E.focus(),
                          (E = null),
                          y(null),
                          n(e);
                      }),
                      (h = ((e) => {
                        if ((0, J.yF)(a)) return () => {};
                        const t = (t) => {
                          "Escape" === t.key && e();
                        };
                        return (
                          a.addEventListener("keydown", t),
                          () => a.removeEventListener("keydown", t)
                        );
                      })(v())),
                      D && "LIGHT_BOX" === C && lt(a, !0);
                    const A = w(l, P, _),
                      k = (S && (x[S] || t[S])) || {},
                      N = c.buildSrc(L, j, k, o, {
                        extraQueryParams: {
                          isInModal: "true",
                          origCompId: S,
                          viewMode: R,
                        },
                      });
                    i.update({
                      [L]: {
                        src: N,
                        width: A.width,
                        height: A.height,
                        closeModal: v(),
                        isMobileDevice: D,
                        isPreviewMode: M,
                        title: T,
                        theme: C,
                      },
                    }),
                      (E = document.activeElement),
                      await s.addComponentToDynamicStructure(L, {
                        components: [],
                        componentType: "TPAModal",
                      });
                  })
                );
              },
              closeModal(e) {
                v()(e);
              },
              getCurrentModalId: () =>
                C().get(o.get(), ["tpaModal", "currentModalId"], null),
            };
          }
        );
      var dt = n(44041),
        ut = n(96114),
        gt = n.n(ut);
      const ft = (0, a.ff)(
        [dt.r, p.PV, it.C9],
        ({ registerToThrottledScroll: e }, t, n) => ({
          name: "siteScrollDispatch",
          pageWillMount() {
            e((e) => {
              gt().measure(() => {
                t.dispatch(
                  "SCROLL",
                  ({ compId: t }) =>
                    ((e, t) => {
                      const n = window.document.getElementById(t);
                      if (!n) return {};
                      const o = n.getBoundingClientRect();
                      return {
                        x: e.x + o.left,
                        y: e.y + o.top,
                        width: o.width,
                        height: o.height,
                        scrollTop: e.y,
                        scrollLeft: e.x,
                        documentHeight: document.documentElement.clientHeight,
                        documentWidth: document.documentElement.clientWidth,
                      };
                    })(e, t),
                  { pageId: n }
                );
              });
            });
          },
        })
      );
      var mt = n(27227),
        ht = n(99708);
      const It = (0, a.ff)(
          [(0, a.t6)(r.R9, c.u2), (0, a.t6)(r.$e, p.u2), s.xP, l.ZQ, mt.l],
          (
            { widgetsClientSpecMapData: e, isMobileView: t },
            { widgets: n },
            o,
            i,
            a
          ) => {
            const r = (e) => {
                ((e) => {
                  if ((0, J.yF)(e)) return;
                  ["fullScreenMode"].forEach((e) =>
                    document.body.classList.add(e)
                  );
                })(i),
                  lt(i, !0),
                  a.set({
                    [`${e}-pinned-layer`]: {
                      "z-index": "var(--above-all-z-index) !important",
                    },
                  }),
                  o.update({
                    [e]: {
                      iOSVersion: (0, ht.oK)(i),
                      isMobileFullScreenMode: !0,
                    },
                  });
              },
              s = (e) => {
                ((e) => {
                  (0, J.yF)(e) ||
                    document.body.classList.remove("fullScreenMode");
                })(i),
                  lt(i, !1);
                const t = `${e}-pinned-layer`,
                  n = a.getCompStyle(t);
                var r, s;
                a.set({
                  [t]:
                    ((r = n),
                    (s = "z-index"),
                    Object.keys(r).reduce(
                      (e, t) => (t !== s && (e[t] = r[t]), e),
                      {}
                    )),
                }),
                  o.update({ [e]: { isMobileFullScreenMode: !1 } });
              };
            return {
              setFullScreenMobile(o, i) {
                if (!t)
                  throw new Error(
                    "show full screen is only available in Mobile view"
                  );
                ((t) => {
                  const o = n[t] || {},
                    { appDefinitionId: i } = e[o.widgetId] || {};
                  return Object.values(f.r6).includes(i);
                })(o) && (i ? r(o) : s(o));
              },
            };
          }
        ),
        yt = (0, a.ff)([be.p, p.PV], (e, t) => ({
          pageDidMount: () =>
            e.registerToCommonConfigChange((e) =>
              t.dispatch("COMMON_CONFIG_UPDATE", () => e)
            ),
        })),
        vt = (0, a.ff)([p.PV, N.jj], (e, t) => ({
          appDidLoadPage({ pageId: n }) {
            var o, i;
            const a =
              null === (o = t.getPreviousRouterInfo()) || void 0 === o
                ? void 0
                : o.pageId;
            if (!a || a === n) return;
            const r = { fromPage: a, toPage: n },
              s =
                null === (i = t.getCurrentRouteInfo().dynamicRouteData) ||
                void 0 === i
                  ? void 0
                  : i.publicData;
            s && (r.routerPublicData = s),
              e.dispatch("PAGE_NAVIGATION", () => r);
          },
        })),
        wt = (e, t) => (Pt(t) && t.templateId) || e,
        Pt = ({ isResponsive: e, widgetId: t }) =>
          e && "14517f3f-ffc5-eced-f592-980aaa0bbb5c" === t,
        bt = (0, a.ff)(
          [
            s.xP,
            (0, a.t6)(r.R9, c.u2),
            (0, a.t6)(r.$e, p.u2),
            x.Xb,
            it.ku,
            c.ex,
            p.nV,
          ],
          (e, { widgetsClientSpecMapData: t }, n, o, i, a, r) => {
            const { widgets: s, tpaInnerRouteConfig: l, pageId: p } = n,
              c = Object.entries(s).map(([e, t]) => {
                const n = wt(e, t);
                return e !== n && a.registerTpaTemplateId(n, e), n;
              });
            a.registerTpasForContext({ contextId: i, pageId: p }, c);
            const d = (t) => {
                const o = r.buildSrc({
                  compId: t,
                  tpaCompData: s[t],
                  pageId: n.pageId,
                  tpaInnerRouteConfig: l,
                });
                e.update({ [t]: { src: o } });
              },
              u = () => {
                const e = C().pickBy(
                  s,
                  ({ widgetId: e, isOOI: n }) => !n && t[e]
                );
                Object.keys(e).forEach(d);
              };
            return {
              pageDidMount() {
                return o.addLoadNewSessionCallback(({ reason: e }) => {
                  "memberLogin" === e && u();
                });
              },
              rebuildTpasSrc: u,
              rebuildTpaSrc: d,
            };
          }
        );
      var Tt = n(65070);
      const Ct = (0, a.ff)(
          [p.PV, E.Iz, (0, a.t6)(r.$e, p.u2), it.C9],
          (e, t, { tpaInnerRouteConfig: n }, o) => ({
            async onUrlChange() {
              const i = t.getRelativeUrl(),
                a = (0, Tt._)(i.replace(/^\./, ""), n.tpaPageUri),
                r = a ? a.join("/") : "";
              e.dispatch("STATE_CHANGED", () => ({ newState: r }), {
                pageId: o,
              });
            },
          })
        ),
        St = (0, a.ff)(
          [s.xP, s.QZ, p.PV, N.jj, l.ZQ, it.C9, i.jn, p.e4],
          (e, t, n, o, i, a, { getOpenedPopups: r }, { rebuildTpasSrc: s }) => {
            const l = { previousCurrency: null };
            return {
              onUrlChange(e) {
                if (!o.getCurrentRouteInfo()) return;
                const t = e.searchParams.get("currency");
                t !== l.previousCurrency &&
                  (s(),
                  Object.values(r()).forEach((e) => e.refreshPopUp()),
                  (l.previousCurrency = t));
              },
            };
          }
        ),
        Et = (0, a.ff)([(0, a.t6)(r.R9, c.u2), c.RN, Ne.O], (e, t, n) => ({
          buildSrc({
            compId: o,
            tpaCompData: i,
            pageId: a,
            tpaInnerRouteConfig: r,
          }) {
            const { widgetsClientSpecMapData: s, deviceType: l } = e,
              p = wt(o, i),
              { widgetId: c } = i,
              { widgetUrl: d, mobileUrl: u } = s[c],
              g = ("mobile" === l && u) || d,
              f = Pt(i) ? "masterPage" : a,
              m = {};
            return (
              (n["specs.thunderbolt.AddSectionURLToTPA"]
                ? !C().isEmpty(r)
                : i.isSection) && (m.tpaInnerRouteConfig = r),
              t.buildSrc(p, f, i, g, m)
            );
          },
          getDefaultProps(t, n, o) {
            var i;
            const { widgetsClientSpecMapData: a, isMobileView: r } = e,
              {
                appDefinitionName: s,
                appDefinitionId: l,
                appPage: p,
                allowScrolling: c,
              } = a[t];
            return {
              title: null !== (i = p.name) && void 0 !== i ? i : s,
              appDefinitionName: s,
              appDefinitionId: l,
              isMobileView: r,
              allowScrolling: c,
              reportIframeStartedLoading: n,
              reportWidgetUnresponsive: o,
            };
          },
        }));
      var Ot = n(65482),
        Dt = n(30516),
        Mt = n(34653);
      const Rt = (0, a.ff)(
          [
            (0, a.t6)(r.R9, c.u2),
            (0, a.t6)(r.$e, p.u2),
            p.KE,
            p.nV,
            c.B_,
            c.lP,
            l.EE,
            (0, a.jt)(p.Wt),
            (0, a.jt)(c.yA),
          ],
          (
            { widgetsClientSpecMapData: e },
            t,
            n,
            o,
            { registerTpaSection: i, unregisterTpaSection: a },
            r,
            s,
            l,
            p
          ) => {
            const c = ({
              appDefinitionId: e = "UNKNOWN",
              widgetId: t = "UNKNOWN",
              compId: n,
              reason: o,
            }) => {
              const i = "IframeTpaDataIntegrityError",
                a = new Error(i);
              (a.name = i),
                s.captureError(a, {
                  tags: {
                    appDefinitionId: e,
                    widgetId: t,
                    feature: "tpa",
                    methodName: "componentWillMount",
                    reason: o,
                  },
                  extra: { compId: n },
                });
            };
            return {
              componentTypes: Mt.X,
              componentWillMount(d) {
                const { widgets: u, tpaInnerRouteConfig: g, pageId: f } = t,
                  m = u[d.id] || u[(0, Dt.is)(d.id)];
                if (!m)
                  return void c({ compId: d.id, reason: "MISSING_DATA_ITEM" });
                const {
                  widgetId: h,
                  isSection: I,
                  appDefinitionId: y,
                  templateId: v,
                } = m;
                if (!e[h])
                  return void c({
                    appDefinitionId: y,
                    widgetId: h,
                    compId: d.id,
                    reason: "MISSING_FROM_CSM",
                  });
                p && p.registerToDataCapsule(v || d.id, y);
                const w = () =>
                  o.buildSrc({
                    compId: d.id,
                    tpaCompData: m,
                    pageId: f,
                    tpaInnerRouteConfig: g,
                  });
                if (I) {
                  const e = {
                    appDefinitionId: y,
                    rebuildSrc: () => {
                      const e = w();
                      n.reportTpaLoadStart(d.id, e), d.updateProps({ src: e });
                    },
                  };
                  i(d.id, e);
                }
                const P = C().once(() => {
                    l && l.reportIframeStartedLoading(d.id);
                  }),
                  b = w(),
                  T = C().once(() => {
                    const { appDefinitionName: t, isWixTPA: n } = e[h];
                    if (n) {
                      const e = new Error("TPA did not send appIsAlive");
                      (e.name = "IframeTpaUnresponsive"),
                        s.captureError(e, {
                          tags: {
                            appDefinitionId: y,
                            widgetId: h,
                            invalidSrc: !b,
                            feature: "tpa",
                            methodName: "componentWillMount",
                          },
                          extra: { appDefinitionName: t, src: b },
                        });
                    }
                  }),
                  S = o.getDefaultProps(h, P, T),
                  E = wt(d.id, m),
                  O = r ? r.getCachedProps(E) : {};
                return (
                  n.reportTpaLoadStart(d.id, b),
                  d.updateProps(
                    Object.assign(
                      Object.assign(Object.assign({}, S), { src: b }),
                      O
                    )
                  ),
                  () => {
                    r &&
                      ("masterPage" === f
                        ? r.cacheProps(d.id)
                        : Pt(m) && r.cacheProps(E, d.getProps())),
                      a(d.id),
                      p && p.unregister(v || d.id);
                  }
                );
              },
            };
          }
        ),
        jt = (0, a.ff)(
          [(0, a.t6)(r.R9, c.u2), (0, a.t6)(r.$e, p.u2), N.jj, W.s, z.$, E.R1],
          ({ widgetsClientSpecMapData: e }, { widgets: t }, n, o, i, a) => ({
            reportIframeStartedLoading(o) {
              const { widgetId: r, templateId: s } = t[o] || t[(0, Dt.is)(o)],
                l = n.getCurrentRouteInfo(),
                p = Math.round(performance.now());
              i.logger.log(
                {
                  appId: e[r].appDefinitionId,
                  widget_id: r,
                  instance_id: null != s ? s : o,
                  src: 42,
                  evid: 642,
                  tts: p,
                  pid: l ? l.pageId : null,
                  pn: a.getPageNumber(),
                },
                { endpoint: "ugc-viewer" }
              );
            },
          })
        ),
        xt = "$TPA$",
        At = {
          [f.RZ.PAGE_LINK]: ["type", "pageId"],
          [f.RZ.EXTERNAL_LINK]: ["type", "target", "url"],
          [f.RZ.ANCHOR_LINK]: ["type", "anchorName", "anchorDataId", "pageId"],
          [f.RZ.EMAIL_LINK]: ["type", "recipient", "subject"],
          [f.RZ.PHONE_LINK]: ["type", "phoneNumber"],
          [f.RZ.WHATSAPP_LINK]: ["type", "phoneNumber"],
          [f.RZ.DOCUMENT_LINK]: ["type", "docId", "name"],
          [f.RZ.DYNAMIC_PAGE_LINK]: [
            "type",
            "routerId",
            "innerRoute",
            "anchorDataId",
          ],
          [f.RZ.ADDRESS_LINK]: ["type", "address"],
        };
      function Lt(e, t, n, o) {
        const i = e.label || "",
          a = !e.isVisible || !1,
          r = e.link
            ? (function (e) {
                const t = C().pick(e.link, At[e.link.type]);
                if (
                  (C().isObject(t.pageId) &&
                    (t.pageId = `#${C().get(t, "pageId.id")}`),
                  t.anchorDataId)
                ) {
                  const e = C().get(t, "anchorDataId.id", t.anchorDataId);
                  t.anchorDataId =
                    "SCROLL_TO_TOP" === e || "SCROLL_TO_BOTTOM" === e
                      ? e
                      : `#${e}`;
                }
                return t;
              })(e)
            : {},
          s = C().merge(r, { title: i, hidden: a });
        if (!s.type)
          return {
            type: f.RZ.MENU_HEADER,
            hidden: a,
            title: i,
            subPages: s.subPages,
          };
        switch (s.type) {
          default:
          case f.RZ.PAGE_LINK:
          case f.RZ.ANCHOR_LINK:
            C().merge(s, kt(e, t, n));
            break;
          case f.RZ.DOCUMENT_LINK:
            const i = o.getLinkUrlFromDataItem(s),
              a = o.getLinkProps(i);
            s.url = a.href;
        }
        return s;
      }
      function kt(e, t, n) {
        var o, i, a, r;
        const s =
            null ===
              (i = null === (o = e.link) || void 0 === o ? void 0 : o.pageId) ||
            void 0 === i
              ? void 0
              : i.pageUriSEO,
          l = {
            isHomePage:
              (null ===
                (r =
                  null === (a = e.link) || void 0 === a ? void 0 : a.pageId) ||
              void 0 === r
                ? void 0
                : r.id) === t,
          };
        return s && C().assign(l, { url: n + "/" + s }), l;
      }
      function Nt(e, t, n, o, i) {
        const {
            externalBaseUrl: a,
            appsClientSpecMapByApplicationId: r,
            metaSiteId: s,
            userFileDomainUrl: l,
            routersConfig: p,
            isMobileView: c,
            isPremiumDomain: d,
            experiments: u,
          } = t,
          g = n.getLinkUtilsRoutingInfo(),
          m = (0, S.b)({
            routingInfo: g,
            metaSiteId: s,
            userFileDomainUrl: l,
            routersConfig: p,
            popupPages: null == o ? void 0 : o.getLightboxPages(),
            multilingualInfo: null == i ? void 0 : i.getMultilingualInfo(),
            isMobileView: c,
            isPremiumDomain: d,
            experiments: u,
          });
        return (function ({
          menuItems: e,
          mainPageId: t,
          baseUrl: n,
          linkUtils: o,
        }) {
          return C().map(e, (e) => {
            const i = Lt(e, t, n, o);
            if (i.type === f.RZ.PAGE_LINK || i.type === f.RZ.MENU_HEADER) {
              const a = C().map(e.items, (e) => Lt(e, t, n, o));
              C().size(a) > 0 && C().assign(i, { subPages: a });
            }
            return i;
          });
        })({
          menuItems: C().filter(
            e,
            ({ link: e }) =>
              !(function (e, t) {
                var n, o;
                if (!t) return !1;
                if (t.type === f.RZ.PAGE_LINK) {
                  let i =
                    null === (n = t.pageId) || void 0 === n
                      ? void 0
                      : n.tpaPageId;
                  const a =
                    e[
                      null === (o = t.pageId) || void 0 === o
                        ? void 0
                        : o.tpaApplicationId
                    ];
                  if (a && i) {
                    C().includes(i, xt) && (i = i.substr(0, i.indexOf(xt)));
                    const e = C().find(a.widgets, (e) => {
                      var t;
                      return (
                        (null === (t = e.appPage) || void 0 === t
                          ? void 0
                          : t.id) === i
                      );
                    });
                    return null == e ? void 0 : e.appPage.hideFromMenu;
                  }
                }
                return !1;
              })(r, e)
          ),
          mainPageId: g.mainPageId,
          baseUrl: a,
          linkUtils: m,
        });
      }
      const _t = (0, a.ff)(
          [
            (0, a.t6)(r.R9, c.u2),
            E.kc,
            it.cK,
            (0, a.jt)(O.rW),
            (0, a.jt)(D.HC),
          ],
          (e, t, n, o, i) => ({
            getSiteMap: async () =>
              Nt(await n.fetchResource("masterPage", "siteMap"), e, t, o, i),
          })
        ),
        Ht = (0, a.ff)(
          [(0, a.t6)(r.R9, c.u2), (0, a.t6)(r.$e, p.u2), s.xP, l.EE],
          ({ widgetsClientSpecMapData: e }, t, n, o) => {
            const i = {};
            return {
              reportTpaLoadStart: (a, r) => {
                var s;
                const { widgets: l } = t,
                  p = l[a] || l[(0, Dt.is)(a)],
                  { widgetId: c, appDefinitionId: d } = p;
                if (!e[c]) return;
                if (
                  !(
                    e[c].isWixTPA &&
                    r &&
                    (null === (s = n.get(a)) || void 0 === s
                      ? void 0
                      : s.src) !== r
                  )
                )
                  return;
                const u = "tpa_iframe_load",
                  g = Date.now();
                o.interactionStarted(u, {
                  customParams: { appDefinitionId: d, widgetId: c },
                }),
                  (i[a] = {
                    src: r,
                    reportLoadFinished: C().once(() =>
                      o.interactionEnded(u, {
                        customParams: {
                          appDefinitionId: d,
                          widgetId: c,
                          duration: Date.now() - g,
                        },
                      })
                    ),
                  });
              },
              reportTpaLoadEnd: (e) => {
                var t;
                const o = i[e];
                (null == o ? void 0 : o.src) &&
                  (null === (t = n.get(e)) || void 0 === t ? void 0 : t.src) ===
                    o.src &&
                  o.reportLoadFinished();
              },
            };
          }
        ),
        Ut = (e) => {
          e(p.nV).to(Et),
            e(p.Wt).to(jt),
            e(o.j.PageDidMountHandler, p.e4).to(bt),
            e(Ot.Vx).to(Rt),
            e(c.XA).to(m),
            e(i.go).to(rt),
            e(o.j.PageDidMountHandler, p.PV).to(tt),
            e(o.j.AppDidLoadPageHandler).to(vt),
            e(p.TJ).to(at),
            e(o.j.PageDidMountHandler, i.jn).to(ot),
            e(p.Cc).to(_t),
            Ye.forEach((t) => {
              e(i.go).to(t);
            }),
            e(o.j.PageDidMountHandler).to(I),
            e(o.j.PageDidMountHandler, o.j.PageWillUnmountHandler, p.R3).to(ct),
            e(o.j.PageWillMountHandler).to(ft),
            e(p.u5).to(It),
            e(o.j.PageDidMountHandler).to(yt),
            e(E.bV).to(Ct),
            e(E.bV).to(St),
            e(p.KE).to(Ht);
        };
    },
    81679: function (e, t, n) {
      n.r(t),
        n.d(t, {
          WindowScrollApiSymbol: function () {
            return d.zp;
          },
          editorPage: function () {
            return b;
          },
          name: function () {
            return d.u2;
          },
          page: function () {
            return P;
          },
        });
      var o = n(43757),
        i = n(8562),
        a = n(11717),
        r = n(16684);
      function s(e) {
        const t = (0, r.unzip)(e),
          n = t[0],
          o = t[1];
        return function (e) {
          let t = 0;
          for (; t < n.length - 2 && e > n[t + 1]; ) t++;
          return (
            (i = e),
            (a = n[t]),
            (r = n[t + 1]),
            (s = o[t]),
            ((o[t + 1] - s) / (r - a)) * (i - a) + s
          );
          var i, a, r, s;
        };
      }
      let l = null;
      var p = n(5096),
        c = n(86305),
        d = n(6245),
        u = n(87821),
        g = n(54301);
      const f = (e) => {
          let t = e;
          for (; t && t !== window.document.body; ) {
            if (
              "fixed" ===
              window
                .getComputedStyle(t)
                .getPropertyValue("position")
                .toLowerCase()
            )
              return !0;
            t = t.offsetParent;
          }
          return !1;
        },
        m = (e, t, n) => {
          const o = e.document.getElementById("WIX_ADS"),
            i = o ? o.offsetHeight : 0,
            a = e.document.getElementById("SITE_HEADER-placeholder"),
            r = a ? a.offsetHeight : 0;
          let s = e.document.body.getBoundingClientRect().top;
          const l = t.getBoundingClientRect().top;
          if (n) {
            const t = e.document.getElementById("SITE_CONTAINER");
            s = t
              ? ((p = e.getComputedStyle(t).marginTop),
                Number(p.replace("px", "")))
              : 0;
          }
          var p;
          return l - s - i - r;
        },
        h = (e) =>
          (null == e ? void 0 : e.getCurrentLightboxId())
            ? window.document.getElementById("POPUPS_ROOT")
            : window,
        I = (0, o.ff)(
          [p.ZQ, p.Y2, d.Ao, u.x, (0, o.jt)(c.r5), (0, o.jt)(a.FK)],
          (e, t, { readyForScrollPromise: n }, o, a, r) => {
            if ((0, i.yF)(e))
              return {
                scrollToComponent: () => Promise.resolve(),
                animatedScrollTo: () => Promise.resolve(),
              };
            const p = async (o, i = {}) => {
              if (!r) return;
              const p = await r.getInstance();
              await n;
              const c = "mobile" === t,
                d = c ? "Quint.easeOut" : "Sine.easeInOut",
                u = (function (e, t, n) {
                  l = l || {
                    desktop: s([
                      [0, 0.6],
                      [360, 0.8],
                      [720, 1],
                      [1440, 1.2],
                      [7200, 2.8],
                      [9600, 3],
                      [1e4, 3],
                    ]),
                    mobile: s([
                      [0, 0.5],
                      [360, 0.7],
                      [720, 0.9],
                      [1440, 1.1],
                      [7200, 2.7],
                      [9600, 2.9],
                      [1e4, 2.9],
                    ]),
                  };
                  const o = Math.abs(t - e);
                  return l[n ? "mobile" : "desktop"](o);
                })(e.pageYOffset, o, c),
                g = h(a);
              return new Promise((e) => {
                const t = Object.assign(Object.assign({}, i), {
                  onComplete: (t) => {
                    var n;
                    null === (n = i.onComplete) || void 0 === n || n.call(i, t),
                      e();
                  },
                });
                p.runAnimationOnElements("BaseScroll", [g], u, 0, {
                  y: o,
                  ease: d,
                  callbacks: t,
                });
              });
            };
            return {
              animatedScrollTo: p,
              scrollToComponent: async (
                t,
                { callbacks: i = {}, skipScrollAnimation: r = !1 } = {}
              ) => {
                await n;
                const s = e.document.getElementById(t);
                if (
                  !s ||
                  (f(s) && !(null == a ? void 0 : a.getCurrentLightboxId()))
                )
                  return;
                const l = await new Promise((t) => {
                  e.requestAnimationFrame(() => {
                    t(m(e, s, o.isScrollingBlocked()));
                  });
                });
                r ? e.scrollTo({ top: 0 }) : await p(l, i),
                  (0, g.M)(s) || s.setAttribute("tabIndex", "-1"),
                  s.focus({ preventScroll: !0 });
              },
            };
          }
        );
      var y = n(59032);
      const v = (0, o.ff)([], () => {
          const { promise: e, resolve: t } = (() => {
            let e;
            return {
              promise: new Promise((t) => {
                e = t;
              }),
              resolve: () => e(),
            };
          })();
          return { readyForScrollPromise: e, setReadyForScroll: t };
        }),
        w = (0, o.ff)([d.Ao], ({ setReadyForScroll: e }) => ({
          pageDidMount: () => {
            e();
          },
        })),
        P = (e) => {
          e(d.zp).to(I), e(d.Ao).to(v), e(y.j.PageDidMountHandler).to(w);
        },
        b = P;
    },
    59846: function (e, t, n) {
      n.r(t),
        n.d(t, {
          WindowWixCodeSdkWarmupDataEnricherSymbol: function () {
            return r.wc;
          },
          editor: function () {
            return C;
          },
          editorPage: function () {
            return E;
          },
          name: function () {
            return r.u2;
          },
          namespace: function () {
            return r.uD;
          },
          page: function () {
            return S;
          },
          site: function () {
            return T;
          },
        });
      var o = n(5096),
        i = n(70498),
        a = n(43757),
        r = n(96754);
      const s = (0, a.ff)([i.N2, r.wc], (e, t) => ({
        getSdkHandlers: () => ({
          onAppsWarmupDataReady(t) {
            e.getWarmupData("appsWarmupData").then((e) => t(e));
          },
          setAppWarmupData: t.setAppWarmupData,
        }),
      }));
      var l = n(16684),
        p = n.n(l),
        c = n(8562),
        d = n(61049),
        u = n(55048),
        g = n(95793),
        f = n(86305),
        m = n(99552),
        h = n(11717),
        I = n(6245),
        y = n(88902),
        v = n(7259);
      function w(e) {
        throw new Error(`language code "${e}" is invalid`);
      }
      const P = (0, a.ff)(
          [
            (0, a.t6)(d.$e, r.u2),
            (0, a.jt)(h.FK),
            o.ZQ,
            o.Y2,
            u.QZ,
            (0, a.jt)(I.zp),
            (0, a.jt)(v.R3),
            (0, a.jt)(g.jn),
            (0, a.jt)(f.cC),
            (0, a.jt)(m.I),
            (0, a.jt)(y.aR),
          ],
          ({ templateIdToCompIdMap: e }, t, o, i, a, r, s, l, d, u, g) => {
            const f = (t) => e[t] || t;
            return {
              getSdkHandlers: () => ({
                getBoundingRectHandler: () =>
                  o
                    ? Promise.resolve({
                        window: { height: o.innerHeight, width: o.innerWidth },
                        document: {
                          height: document.documentElement.clientHeight,
                          width: document.documentElement.clientWidth,
                        },
                        scroll: { x: o.scrollX, y: o.scrollY },
                      })
                    : null,
                setCurrentLanguage:
                  (null == g ? void 0 : g.setCurrentLanguage) || w,
                async scrollToComponent(e, t) {
                  await (null == r ? void 0 : r.scrollToComponent(e)), t();
                },
                async scrollToHandler(e, t, n) {
                  if (!(0, c.yF)(o))
                    return (
                      n || o.scrollTo(e, t),
                      null == r ? void 0 : r.animatedScrollTo(t)
                    );
                },
                async scrollByHandler(e, t) {
                  if (!(0, c.yF)(o))
                    return (
                      o.scrollBy(e, t),
                      new Promise((e) => {
                        o.requestAnimationFrame(() => {
                          e();
                        });
                      })
                    );
                },
                async copyToClipboard(e) {
                  (await n.e(1969).then(n.t.bind(n, 91969, 23))).default(e);
                },
                getCurrentGeolocation() {
                  return (0, c.d6)(o)
                    ? new Promise((e, t) => {
                        navigator.geolocation.getCurrentPosition(
                          ({ timestamp: t, coords: n }) => {
                            e({ timestamp: t, coords: p().toPlainObject(n) });
                          },
                          ({ message: e, code: n }) => {
                            t({ message: e, code: n });
                          }
                        );
                      })
                    : Promise.reject(new Error("Geolocation not available"));
                },
                openModal(e, t, n) {
                  if (!s) throw new Error("TPA Modal feature is not available");
                  return s.openModal(e, t, n ? f(n) : n);
                },
                openLightbox(e, t, n) {
                  return d
                    ? d.open(e, n)
                    : Promise.reject(
                        `There is no lightbox with the title "${t}".`
                      );
                },
                closeLightbox() {
                  d && d.close();
                },
                openTpaPopup(e, t, n) {
                  if (!l) throw new Error("TPA Popup feature is not available");
                  return l.openPopup(e, t, f(n));
                },
                trackEvent(e, t = {}, n = {}) {
                  const o = { eventName: e, params: t, options: n };
                  u && u.trackEvent(o);
                },
                postMessageHandler(e, t = "parent", n = "*", i) {
                  o && "parent" === t && o.parent.postMessage(e, n, i);
                },
              }),
            };
          }
        ),
        b = (0, a.ff)([], () => {
          const e = {};
          return {
            setAppWarmupData({ appDefinitionId: t, key: n, data: o }) {
              p().set(e, [t, n], o);
            },
            enrichWarmupData: async () => ({ appsWarmupData: e }),
          };
        }),
        T = (e) => {
          e(r.wc, i.ci).to(b), e(o.CT).to(s);
        },
        C = (e) => {
          e(r.wc).to(b), e(o.CT).to(s);
        },
        S = (e) => {
          e(o.CT).to(P);
        },
        E = S;
    },
  },
]);
//# sourceMappingURL=https://static.parastorage.com/services/wix-thunderbolt/dist/ab-test-compilation/group_4.5bcbfceb.chunk.min.js.map
